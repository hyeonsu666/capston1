Address: 0x401000, Instruction: rep retn
Address: 0x401010, Instruction: sub     esp, 1Ch
Address: 0x401013, Instruction: xor     eax, eax
Address: 0x401015, Instruction: cmp     word ptr ds:400000h, 5A4Dh
Address: 0x40101E, Instruction: mov     ds:_mingw_initltsdrot_force, 1
Address: 0x401028, Instruction: mov     ds:_mingw_initltsdyn_force, 1
Address: 0x401032, Instruction: mov     ds:_mingw_initltssuo_force, 1
Address: 0x40103C, Instruction: mov     ds:_mingw_initcharmax, 1
Address: 0x401046, Instruction: jz      short loc_4010B0
Address: 0x401048, Instruction: mov     ds:_managedapp, eax
Address: 0x40104D, Instruction: mov     eax, ds:_mingw_app_type
Address: 0x401052, Instruction: test    eax, eax
Address: 0x401054, Instruction: jz      short loc_4010A0
Address: 0x401056, Instruction: mov     [esp+1Ch+Type], 2; Type
Address: 0x40105D, Instruction: call    ___set_app_type
Address: 0x401062, Instruction: mov     [esp+1Ch+Type], 0FFFFFFFFh; ptr
Address: 0x401069, Instruction: call    __encode_pointer
Address: 0x40106E, Instruction: mov     edx, ds:__fmode
Address: 0x401074, Instruction: mov     ds:___onexitend, eax
Address: 0x401079, Instruction: mov     ds:___onexitbegin, eax
Address: 0x40107E, Instruction: mov     eax, ds:__imp___fmode
Address: 0x401083, Instruction: mov     [eax], edx
Address: 0x401085, Instruction: call    __setargv
Address: 0x40108A, Instruction: cmp     __MINGW_INSTALL_DEBUG_MATHERR, 1
Address: 0x401091, Instruction: jz      short loc_401100
Address: 0x401093, Instruction: xor     eax, eax
Address: 0x401095, Instruction: add     esp, 1Ch
Address: 0x401098, Instruction: retn
Address: 0x401099, Instruction: align 10h
Address: 0x4010A0, Instruction: mov     [esp+1Ch+Type], 1; Type
Address: 0x4010A7, Instruction: call    ___set_app_type
Address: 0x4010AC, Instruction: jmp     short loc_401062
Address: 0x4010AE, Instruction: align 10h
Address: 0x4010B0, Instruction: mov     edx, ds:40003Ch
Address: 0x4010B6, Instruction: cmp     dword ptr [edx+400000h], 4550h
Address: 0x4010C0, Instruction: lea     ecx, [edx+400000h]
Address: 0x4010C6, Instruction: jnz     short loc_401048
Address: 0x4010C8, Instruction: movzx   edx, word ptr [ecx+18h]
Address: 0x4010CC, Instruction: cmp     dx, 10Bh
Address: 0x4010D1, Instruction: jz      short loc_401112
Address: 0x4010D3, Instruction: cmp     dx, 20Bh
Address: 0x4010D8, Instruction: jnz     loc_401048
Address: 0x4010DE, Instruction: cmp     dword ptr [ecx+84h], 0Eh
Address: 0x4010E5, Instruction: jbe     loc_401048
Address: 0x4010EB, Instruction: mov     edx, [ecx+0F8h]
Address: 0x4010F1, Instruction: xor     eax, eax
Address: 0x4010F3, Instruction: test    edx, edx
Address: 0x4010F5, Instruction: setnz   al
Address: 0x4010F8, Instruction: jmp     loc_401048
Address: 0x4010FD, Instruction: align 10h
Address: 0x401100, Instruction: mov     [esp+1Ch+Type], offset __matherr; f
Address: 0x401107, Instruction: call    ___mingw_setusermatherr
Address: 0x40110C, Instruction: xor     eax, eax
Address: 0x40110E, Instruction: add     esp, 1Ch
Address: 0x401111, Instruction: retn
Address: 0x401112, Instruction: cmp     dword ptr [ecx+74h], 0Eh
Address: 0x401116, Instruction: jbe     loc_401048
Address: 0x40111C, Instruction: mov     ecx, [ecx+0E8h]
Address: 0x401122, Instruction: xor     eax, eax
Address: 0x401124, Instruction: test    ecx, ecx
Address: 0x401126, Instruction: setnz   al
Address: 0x401129, Instruction: jmp     loc_401048
Address: 0x401130, Instruction: sub     esp, 2Ch
Address: 0x401133, Instruction: mov     eax, ds:__newmode
Address: 0x401138, Instruction: mov     [esp+2Ch+var_1C], offset __bss_start__
Address: 0x401140, Instruction: mov     [esp+2Ch+var_24], offset _envp
Address: 0x401148, Instruction: mov     [esp+2Ch+var_28], offset _argv
Address: 0x401150, Instruction: mov     ds:__bss_start__.newmode, eax
Address: 0x401155, Instruction: mov     eax, ds:__dowildcard
Address: 0x40115A, Instruction: mov     [esp+2Ch+var_2C], offset _argc
Address: 0x401161, Instruction: mov     [esp+2Ch+var_20], eax
Address: 0x401165, Instruction: call    ___getmainargs
Address: 0x40116A, Instruction: mov     ds:_argret, eax
Address: 0x40116F, Instruction: add     esp, 2Ch
Address: 0x401172, Instruction: retn
Address: 0x401180, Instruction: push    ebp
Address: 0x401181, Instruction: xor     eax, eax
Address: 0x401183, Instruction: mov     ebp, esp
Address: 0x401185, Instruction: mov     ecx, 11h
Address: 0x40118A, Instruction: push    edi
Address: 0x40118B, Instruction: push    esi
Address: 0x40118C, Instruction: lea     edx, [ebp+var_5C]
Address: 0x40118F, Instruction: push    ebx
Address: 0x401190, Instruction: mov     edi, edx
Address: 0x401192, Instruction: sub     esp, 7Ch
Address: 0x401195, Instruction: rep stosd
Address: 0x401197, Instruction: mov     al, 30h ; '0'
Address: 0x401199, Instruction: call    ___chkstk_ms
Address: 0x40119E, Instruction: sub     esp, eax
Address: 0x4011A0, Instruction: lea     eax, [esp+1Bh]
Address: 0x4011A4, Instruction: and     eax, 0FFFFFFF0h
Address: 0x4011A7, Instruction: mov     dword ptr [lpszCommandLine], 0CCCCCCCCh
Address: 0x4011AD, Instruction: mov     dword ptr [lpszCommandLine+4], 0CCCCCCCCh
Address: 0x4011B4, Instruction: mov     dword ptr [lpszCommandLine+8], 0CCCCCCCCh
Address: 0x4011BB, Instruction: mov     dword ptr [lpszCommandLine+0Ch], 0CCCCCCCCh
Address: 0x4011C2, Instruction: mov     dword ptr [lpszCommandLine+10h], 0CCCCCCCCh
Address: 0x4011C9, Instruction: mov     dword ptr [lpszCommandLine+14h], 0CCCCCCCCh
Address: 0x4011D0, Instruction: mov     dword ptr [lpszCommandLine+18h], 0CCCCCCCCh
Address: 0x4011D7, Instruction: mov     dword ptr [lpszCommandLine+1Ch], 0CCCCCCCCh
Address: 0x4011DE, Instruction: and     esp, 0FFFFFFF0h
Address: 0x4011E1, Instruction: mov     lpszCommandLine, ds:_mingw_app_type
Address: 0x4011E6, Instruction: test    eax, eax
Address: 0x4011E8, Instruction: jnz     loc_401490
Address: 0x4011EE, Instruction: mov     eax, large fs:18h
Address: 0x4011F4, Instruction: mov     esi, ds:__imp__InterlockedCompareExchange@12
Address: 0x4011FA, Instruction: mov     ebx, [eax+4]
Address: 0x4011FD, Instruction: mov     edi, ds:__imp__Sleep@4
Address: 0x401203, Instruction: jmp     short loc_401219
Address: 0x401205, Instruction: cmp     lock_free, fiberid
Address: 0x401207, Instruction: jz      loc_401420
Address: 0x40120D, Instruction: mov     dword ptr [esp], 3E8h; dwMilliseconds
Address: 0x401214, Instruction: call    edi ; __imp__Sleep@4
Address: 0x401216, Instruction: sub     esp, 4
Address: 0x401219, Instruction: mov     dword ptr [esp+8], 0; Comperand
Address: 0x401221, Instruction: mov     [esp+4], fiberid; Exchange
Address: 0x401225, Instruction: mov     dword ptr [esp], offset ___native_startup_lock; Destination
Address: 0x40122C, Instruction: call    esi ; __imp__InterlockedCompareExchange@12
Address: 0x40122E, Instruction: sub     esp, 0Ch
Address: 0x401231, Instruction: test    lock_free, lock_free
Address: 0x401233, Instruction: jnz     short loc_401205
Address: 0x401235, Instruction: mov     lock_free, ds:___native_startup_state
Address: 0x40123A, Instruction: xor     fiberid, fiberid
Address: 0x40123C, Instruction: cmp     eax, 1
Address: 0x40123F, Instruction: jz      loc_401433
Address: 0x401245, Instruction: mov     eax, ds:___native_startup_state
Address: 0x40124A, Instruction: test    eax, eax
Address: 0x40124C, Instruction: jz      loc_4014A1
Address: 0x401252, Instruction: mov     ds:_has_cctor, 1
Address: 0x40125C, Instruction: mov     eax, ds:___native_startup_state
Address: 0x401261, Instruction: cmp     eax, 1
Address: 0x401264, Instruction: jz      loc_40144D
Address: 0x40126A, Instruction: test    nested, nested
Address: 0x40126C, Instruction: jz      loc_401473
Address: 0x401272, Instruction: mov     eax, ds:___dyn_tls_init_callback
Address: 0x401277, Instruction: test    eax, eax
Address: 0x401279, Instruction: jz      short loc_401297
Address: 0x40127B, Instruction: mov     dword ptr [esp+8], 0; lpreserved
Address: 0x401283, Instruction: mov     dword ptr [esp+4], 2; dwReason
Address: 0x40128B, Instruction: mov     dword ptr [esp], 0; hDllHandle
Address: 0x401292, Instruction: call    eax ; ___dyn_tls_init@12
Address: 0x401294, Instruction: sub     esp, 0Ch
Address: 0x401297, Instruction: call    __pei386_runtime_relocator
Address: 0x40129C, Instruction: mov     dword ptr [esp], offset __gnu_exception_handler@4; lpTopLevelExceptionFilter
Address: 0x4012A3, Instruction: call    ds:__imp__SetUnhandledExceptionFilter@4
Address: 0x4012A9, Instruction: sub     esp, 4
Address: 0x4012AC, Instruction: mov     ds:___mingw_oldexcpt_handler, eax
Address: 0x4012B1, Instruction: mov     dword ptr [esp], offset ___mingw_invalidParameterHandler; void (*)(const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t)
Address: 0x4012B8, Instruction: call    near ptr __imp___set_invalid_parameter_handler
Address: 0x4012BD, Instruction: call    _fpreset
Address: 0x4012C2, Instruction: mov     eax, ds:__imp___acmdln
Address: 0x4012C7, Instruction: mov     ds:___mingw_winmain_hInstance, 400000h
Address: 0x4012D1, Instruction: mov     eax, [eax]
Address: 0x4012D3, Instruction: test    lpszCommandLine, lpszCommandLine
Address: 0x4012D5, Instruction: jz      short loc_401319
Address: 0x4012D7, Instruction: xor     ecx, ecx
Address: 0x4012D9, Instruction: jmp     short loc_4012F0
Address: 0x4012DB, Instruction: align 10h
Address: 0x4012E0, Instruction: test    dl, dl
Address: 0x4012E2, Instruction: jz      short loc_401314
Address: 0x4012E4, Instruction: test    inDoubleQuote, inDoubleQuote
Address: 0x4012E6, Instruction: jz      short loc_401309
Address: 0x4012E8, Instruction: mov     inDoubleQuote, 1
Address: 0x4012ED, Instruction: add     lpszCommandLine, 1
Address: 0x4012F0, Instruction: movzx   edx, byte ptr [lpszCommandLine]
Address: 0x4012F3, Instruction: cmp     dl, 20h ; ' '
Address: 0x4012F6, Instruction: jle     short loc_4012E0
Address: 0x4012F8, Instruction: mov     ebx, inDoubleQuote
Address: 0x4012FA, Instruction: xor     ebx, 1
Address: 0x4012FD, Instruction: cmp     dl, 22h ; '"'
Address: 0x401300, Instruction: cmovz   inDoubleQuote, ebx
Address: 0x401303, Instruction: jmp     short loc_4012ED
Address: 0x401305, Instruction: test    dl, dl
Address: 0x401307, Instruction: jz      short loc_401314
Address: 0x401309, Instruction: add     lpszCommandLine, 1
Address: 0x40130C, Instruction: movzx   edx, byte ptr [lpszCommandLine]
Address: 0x40130F, Instruction: cmp     dl, 20h ; ' '
Address: 0x401312, Instruction: jle     short loc_401305
Address: 0x401314, Instruction: mov     ds:___mingw_winmain_lpCmdLine, lpszCommandLine
Address: 0x401319, Instruction: mov     edi, ds:_mingw_app_type
Address: 0x40131F, Instruction: test    edi, edi
Address: 0x401321, Instruction: jz      short loc_401338
Address: 0x401323, Instruction: movzx   edx, [ebp+var_2C]
Address: 0x401327, Instruction: mov     lpszCommandLine, 0Ah
Address: 0x40132C, Instruction: test    [ebp+var_30], 1
Address: 0x401330, Instruction: cmovnz  eax, edx
Address: 0x401333, Instruction: mov     ___mingw_winmain_nShowCmd, eax
Address: 0x401338, Instruction: mov     eax, ds:_argc
Address: 0x40133D, Instruction: mov     [ebp+var_70], eax
Address: 0x401340, Instruction: mov     esi, eax
Address: 0x401342, Instruction: lea     eax, ds:4[eax*4]
Address: 0x401349, Instruction: mov     [ebp+var_74], eax
Address: 0x40134C, Instruction: mov     [esp], eax; Size
Address: 0x40134F, Instruction: call    _malloc
Address: 0x401354, Instruction: test    esi, esi
Address: 0x401356, Instruction: mov     edi, ds:_argv
Address: 0x40135C, Instruction: mov     [ebp+var_6C], eax
Address: 0x40135F, Instruction: jle     loc_4014C4
Address: 0x401365, Instruction: xor     ebx, ebx
Address: 0x401367, Instruction: mov     esi, edi
Address: 0x401369, Instruction: lea     esi, [esi+0]
Address: 0x401370, Instruction: mov     eax, [esi+ebx*4]
Address: 0x401373, Instruction: mov     [esp], eax; Str
Address: 0x401376, Instruction: call    _strlen
Address: 0x40137B, Instruction: lea     edi, [eax+1]
Address: 0x40137E, Instruction: mov     [esp], edi; Size
Address: 0x401381, Instruction: call    _malloc
Address: 0x401386, Instruction: mov     ecx, [ebp+var_6C]
Address: 0x401389, Instruction: mov     [ecx+ebx*4], eax
Address: 0x40138C, Instruction: mov     ecx, [esi+ebx*4]
Address: 0x40138F, Instruction: add     ebx, 1
Address: 0x401392, Instruction: mov     [esp+8], edi; Size
Address: 0x401396, Instruction: mov     [esp], eax; void *
Address: 0x401399, Instruction: mov     [esp+4], ecx; Src
Address: 0x40139D, Instruction: call    _memcpy
Address: 0x4013A2, Instruction: cmp     ebx, [ebp+var_70]
Address: 0x4013A5, Instruction: jnz     short loc_401370
Address: 0x4013A7, Instruction: mov     eax, [ebp+var_74]
Address: 0x4013AA, Instruction: sub     eax, 4
Address: 0x4013AD, Instruction: mov     esi, [ebp+var_6C]
Address: 0x4013B0, Instruction: mov     dword ptr [esi+eax], 0
Address: 0x4013B7, Instruction: mov     ds:_argv, esi
Address: 0x4013BD, Instruction: call    ___main
Address: 0x4013C2, Instruction: mov     eax, ds:__imp____initenv
Address: 0x4013C7, Instruction: mov     edx, ds:_envp
Address: 0x4013CD, Instruction: mov     [eax], edx
Address: 0x4013CF, Instruction: mov     eax, ds:_envp
Address: 0x4013D4, Instruction: mov     [esp+8], eax; inst
Address: 0x4013D8, Instruction: mov     eax, ds:_argv
Address: 0x4013DD, Instruction: mov     [esp+4], eax; cmdline
Address: 0x4013E1, Instruction: mov     eax, ds:_argc
Address: 0x4013E6, Instruction: mov     [esp], eax; flags
Address: 0x4013E9, Instruction: call    _main
Address: 0x4013EE, Instruction: mov     esi, ds:_managedapp
Address: 0x4013F4, Instruction: test    esi, esi
Address: 0x4013F6, Instruction: mov     ds:_mainret, eax
Address: 0x4013FB, Instruction: jz      loc_4014CB
Address: 0x401401, Instruction: mov     ebx, ds:_has_cctor
Address: 0x401407, Instruction: test    ebx, ebx
Address: 0x401409, Instruction: jnz     short loc_401415
Address: 0x40140B, Instruction: call    __cexit
Address: 0x401410, Instruction: mov     eax, ds:_mainret
Address: 0x401415, Instruction: lea     esp, [ebp-0Ch]
Address: 0x401418, Instruction: pop     ebx
Address: 0x401419, Instruction: pop     esi
Address: 0x40141A, Instruction: pop     edi
Address: 0x40141B, Instruction: pop     ebp
Address: 0x40141C, Instruction: retn
Address: 0x40141D, Instruction: align 10h
Address: 0x401420, Instruction: mov     lock_free, ds:___native_startup_state
Address: 0x401425, Instruction: mov     fiberid, 1
Address: 0x40142A, Instruction: cmp     eax, 1
Address: 0x40142D, Instruction: jnz     loc_401245
Address: 0x401433, Instruction: mov     dword ptr [esp], 1Fh
Address: 0x40143A, Instruction: call    __amsg_exit
Address: 0x40143F, Instruction: mov     eax, ds:___native_startup_state
Address: 0x401444, Instruction: cmp     eax, 1
Address: 0x401447, Instruction: jnz     loc_40126A
Address: 0x40144D, Instruction: mov     dword ptr [esp+4], offset ___xc_z; Last
Address: 0x401455, Instruction: mov     dword ptr [esp], offset ___crt_xc_start__; First
Address: 0x40145C, Instruction: call    __initterm
Address: 0x401461, Instruction: test    nested, nested
Address: 0x401463, Instruction: mov     ds:___native_startup_state, 2
Address: 0x40146D, Instruction: jnz     loc_401272
Address: 0x401473, Instruction: mov     dword ptr [esp+4], 0; Value
Address: 0x40147B, Instruction: mov     dword ptr [esp], offset ___native_startup_lock; Target
Address: 0x401482, Instruction: call    ds:__imp__InterlockedExchange@8
Address: 0x401488, Instruction: sub     esp, 8
Address: 0x40148B, Instruction: jmp     loc_401272
Address: 0x401490, Instruction: mov     [esp], edx; lpStartupInfo
Address: 0x401493, Instruction: call    ds:__imp__GetStartupInfoA@4
Address: 0x401499, Instruction: sub     esp, 4
Address: 0x40149C, Instruction: jmp     loc_4011EE
Address: 0x4014A1, Instruction: mov     ds:___native_startup_state, 1
Address: 0x4014AB, Instruction: mov     dword ptr [esp+4], offset ___xi_z; Last
Address: 0x4014B3, Instruction: mov     dword ptr [esp], offset ___crt_xc_end__; First
Address: 0x4014BA, Instruction: call    __initterm
Address: 0x4014BF, Instruction: jmp     loc_40125C
Address: 0x4014C4, Instruction: xor     eax, eax
Address: 0x4014C6, Instruction: jmp     loc_4013AD
Address: 0x4014CB, Instruction: mov     [esp], eax; Code
Address: 0x4014CE, Instruction: xchg    ax, ax
Address: 0x4014D0, Instruction: call    _exit
Address: 0x4014E0, Instruction: sub     esp, 0Ch
Address: 0x4014E3, Instruction: mov     ds:_mingw_app_type, 1
Address: 0x4014ED, Instruction: call    ___security_init_cookie
Address: 0x4014F2, Instruction: add     esp, 0Ch
Address: 0x4014F5, Instruction: jmp     ___tmainCRTStartup
Address: 0x401500, Instruction: sub     esp, 0Ch
Address: 0x401503, Instruction: mov     ds:_mingw_app_type, 0
Address: 0x40150D, Instruction: call    ___security_init_cookie
Address: 0x401512, Instruction: add     esp, 0Ch
Address: 0x401515, Instruction: jmp     ___tmainCRTStartup
Address: 0x401520, Instruction: push    ebp
Address: 0x401521, Instruction: mov     ebp, esp
Address: 0x401523, Instruction: sub     esp, 18h
Address: 0x401526, Instruction: mov     dword ptr [esp+0Ch], 0; uType
Address: 0x40152E, Instruction: mov     dword ptr [esp+8], offset Caption; "Welcome Message"
Address: 0x401536, Instruction: mov     dword ptr [esp+4], offset Text; "Hello World!!"
Address: 0x40153E, Instruction: mov     dword ptr [esp], 0; hWnd
Address: 0x401545, Instruction: mov     eax, ds:__imp__MessageBoxA@16
Address: 0x40154A, Instruction: call    eax ; __imp__MessageBoxA@16
Address: 0x40154C, Instruction: sub     esp, 10h
Address: 0x40154F, Instruction: mov     eax, 0
Address: 0x401554, Instruction: leave
Address: 0x401555, Instruction: retn    10h
Address: 0x401560, Instruction: sub     esp, 1Ch
Address: 0x401563, Instruction: mov     eax, [esp+1Ch+dwReason]
Address: 0x401567, Instruction: test    eax, eax
Address: 0x401569, Instruction: jz      short loc_401580
Address: 0x40156B, Instruction: cmp     eax, 3
Address: 0x40156E, Instruction: jz      short loc_401580
Address: 0x401570, Instruction: mov     eax, 1
Address: 0x401575, Instruction: add     esp, 1Ch
Address: 0x401578, Instruction: retn    0Ch
Address: 0x40157B, Instruction: align 10h
Address: 0x401580, Instruction: mov     edx, [esp+1Ch+lpreserved]
Address: 0x401584, Instruction: mov     [esp+1Ch+reason], eax; reason
Address: 0x401588, Instruction: mov     eax, [esp+1Ch+hDllHandle]
Address: 0x40158C, Instruction: mov     [esp+1Ch+reserved], edx; reserved
Address: 0x401590, Instruction: mov     [esp+1Ch+var_1C], eax; hDllHandle
Address: 0x401593, Instruction: call    ___mingw_TLScallback
Address: 0x401598, Instruction: mov     eax, 1
Address: 0x40159D, Instruction: add     esp, 1Ch
Address: 0x4015A0, Instruction: retn    0Ch
Address: 0x4015B0, Instruction: push    ebx
Address: 0x4015B1, Instruction: sub     esp, 18h
Address: 0x4015B4, Instruction: cmp     __CRT_MT, 2
Address: 0x4015BB, Instruction: mov     eax, [esp+1Ch+dwReason]
Address: 0x4015BF, Instruction: jz      short loc_4015CB
Address: 0x4015C1, Instruction: mov     __CRT_MT, 2
Address: 0x4015CB, Instruction: cmp     eax, 2
Address: 0x4015CE, Instruction: jz      short loc_4015E1
Address: 0x4015D0, Instruction: cmp     eax, 1
Address: 0x4015D3, Instruction: jz      short loc_401610
Address: 0x4015D5, Instruction: add     esp, 18h
Address: 0x4015D8, Instruction: mov     eax, 1
Address: 0x4015DD, Instruction: pop     ebx
Address: 0x4015DE, Instruction: retn    0Ch
Address: 0x4015E1, Instruction: mov     ebx, offset ___xd_z
Address: 0x4015E6, Instruction: cmp     ps, offset ___xd_z
Address: 0x4015EC, Instruction: jz      short loc_4015D5
Address: 0x4015EE, Instruction: xchg    ax, ax
Address: 0x4015F0, Instruction: mov     eax, [ps]
Address: 0x4015F2, Instruction: test    eax, eax
Address: 0x4015F4, Instruction: jz      short loc_4015F8
Address: 0x4015F6, Instruction: call    eax
Address: 0x4015F8, Instruction: add     ps, 4
Address: 0x4015FB, Instruction: cmp     ps, offset ___xd_z
Address: 0x401601, Instruction: jnz     short loc_4015F0
Address: 0x401603, Instruction: add     esp, 18h
Address: 0x401606, Instruction: mov     eax, 1
Address: 0x40160B, Instruction: pop     ps
Address: 0x40160C, Instruction: retn    0Ch
Address: 0x40160F, Instruction: align 10h
Address: 0x401610, Instruction: mov     eax, [esp+1Ch+lpreserved]
Address: 0x401614, Instruction: mov     [esp+1Ch+reason], 1; reason
Address: 0x40161C, Instruction: mov     [esp+1Ch+reserved], eax; reserved
Address: 0x401620, Instruction: mov     eax, [esp+1Ch+hDllHandle]
Address: 0x401624, Instruction: mov     [esp+1Ch+var_1C], eax; hDllHandle
Address: 0x401627, Instruction: call    ___mingw_TLScallback
Address: 0x40162C, Instruction: jmp     short loc_4015D5
Address: 0x401630, Instruction: xor     eax, eax
Address: 0x401632, Instruction: retn
Address: 0x401640, Instruction: mov     eax, ds:__imp____lconv_init
Address: 0x401645, Instruction: jmp     eax
Address: 0x401650, Instruction: mov     eax, [esp+codedptr]
Address: 0x401654, Instruction: retn
Address: 0x401660, Instruction: mov     eax, [esp+ptr]
Address: 0x401664, Instruction: retn
Address: 0x401670, Instruction: push    ebx
Address: 0x401671, Instruction: sub     esp, 28h
Address: 0x401674, Instruction: mov     eax, ds:___onexitbegin
Address: 0x401679, Instruction: mov     [esp+2Ch+codedptr], eax; codedptr
Address: 0x40167C, Instruction: call    __decode_pointer
Address: 0x401681, Instruction: cmp     eax, 0FFFFFFFFh
Address: 0x401684, Instruction: mov     [esp+2Ch+onexitbegin], eax
Address: 0x401688, Instruction: jz      loc_401710
Address: 0x40168E, Instruction: mov     [esp+2Ch+codedptr], 8
Address: 0x401695, Instruction: call    __lock
Address: 0x40169A, Instruction: mov     eax, ds:___onexitbegin
Address: 0x40169F, Instruction: mov     [esp+2Ch+codedptr], eax; codedptr
Address: 0x4016A2, Instruction: call    __decode_pointer
Address: 0x4016A7, Instruction: mov     [esp+2Ch+onexitbegin], eax
Address: 0x4016AB, Instruction: mov     eax, ds:___onexitend
Address: 0x4016B0, Instruction: mov     [esp+2Ch+codedptr], eax; codedptr
Address: 0x4016B3, Instruction: call    __decode_pointer
Address: 0x4016B8, Instruction: mov     [esp+2Ch+onexitend], eax
Address: 0x4016BC, Instruction: lea     eax, [esp+2Ch+onexitend]
Address: 0x4016C0, Instruction: mov     [esp+2Ch+var_24], eax
Address: 0x4016C4, Instruction: lea     eax, [esp+2Ch+onexitbegin]
Address: 0x4016C8, Instruction: mov     [esp+2Ch+var_28], eax
Address: 0x4016CC, Instruction: mov     eax, [esp+2Ch+func]
Address: 0x4016D0, Instruction: mov     [esp+2Ch+codedptr], eax
Address: 0x4016D3, Instruction: call    ___dllonexit
Address: 0x4016D8, Instruction: mov     ebx, eax
Address: 0x4016DA, Instruction: mov     retval, [esp+2Ch+onexitbegin]
Address: 0x4016DE, Instruction: mov     [esp+2Ch+codedptr], eax; ptr
Address: 0x4016E1, Instruction: call    __encode_pointer
Address: 0x4016E6, Instruction: mov     ds:___onexitbegin, eax
Address: 0x4016EB, Instruction: mov     eax, [esp+2Ch+onexitend]
Address: 0x4016EF, Instruction: mov     [esp+2Ch+codedptr], eax; ptr
Address: 0x4016F2, Instruction: call    __encode_pointer
Address: 0x4016F7, Instruction: mov     [esp+2Ch+codedptr], 8
Address: 0x4016FE, Instruction: mov     ds:___onexitend, eax
Address: 0x401703, Instruction: call    __unlock
Address: 0x401708, Instruction: add     esp, 28h
Address: 0x40170B, Instruction: mov     eax, retval
Address: 0x40170D, Instruction: pop     retval
Address: 0x40170E, Instruction: retn
Address: 0x40170F, Instruction: align 10h
Address: 0x401710, Instruction: mov     eax, [esp+2Ch+func]
Address: 0x401714, Instruction: mov     [esp+2Ch+codedptr], eax; Func
Address: 0x401717, Instruction: call    ds:__imp___onexit
Address: 0x40171D, Instruction: add     esp, 28h
Address: 0x401720, Instruction: pop     ebx
Address: 0x401721, Instruction: retn
Address: 0x401730, Instruction: sub     esp, 1Ch
Address: 0x401733, Instruction: mov     eax, [esp+1Ch+func]
Address: 0x401737, Instruction: mov     [esp+1Ch+var_1C], eax; func
Address: 0x40173A, Instruction: call    _mingw_onexit
Address: 0x40173F, Instruction: test    eax, eax
Address: 0x401741, Instruction: setz    al
Address: 0x401744, Instruction: add     esp, 1Ch
Address: 0x401747, Instruction: movzx   eax, al
Address: 0x40174A, Instruction: neg     eax
Address: 0x40174C, Instruction: retn
Address: 0x401750, Instruction: push    ebp
Address: 0x401751, Instruction: mov     ebp, esp
Address: 0x401753, Instruction: push    esi
Address: 0x401754, Instruction: push    ebx
Address: 0x401755, Instruction: sub     esp, 10h
Address: 0x401758, Instruction: mov     ebx, [ebp+exception_data]
Address: 0x40175B, Instruction: mov     eax, [ebx]
Address: 0x40175D, Instruction: mov     eax, [eax]
Address: 0x40175F, Instruction: cmp     eax, 0C0000091h
Address: 0x401764, Instruction: ja      short loc_4017A8
Address: 0x401766, Instruction: cmp     eax, 0C000008Dh
Address: 0x40176B, Instruction: jnb     loc_401810
Address: 0x401771, Instruction: cmp     eax, 0C0000005h
Address: 0x401776, Instruction: jnz     loc_401817
Address: 0x40177C, Instruction: mov     dword ptr [esp+4], 0; Function
Address: 0x401784, Instruction: mov     dword ptr [esp], 0Bh; Signal
Address: 0x40178B, Instruction: call    _signal
Address: 0x401790, Instruction: cmp     old_handler, 1
Address: 0x401793, Instruction: jz      loc_401846
Address: 0x401799, Instruction: test    old_handler, old_handler
Address: 0x40179B, Instruction: jz      short loc_4017BD
Address: 0x40179D, Instruction: mov     dword ptr [esp], 0Bh
Address: 0x4017A4, Instruction: call    old_handler
Address: 0x4017A6, Instruction: jmp     short loc_4017FD
Address: 0x4017A8, Instruction: cmp     eax, 0C0000094h
Address: 0x4017AD, Instruction: jz      short loc_4017D1
Address: 0x4017AF, Instruction: cmp     eax, 0C0000096h
Address: 0x4017B4, Instruction: jz      short loc_40181E
Address: 0x4017B6, Instruction: cmp     eax, 0C0000093h
Address: 0x4017BB, Instruction: jz      short loc_401810
Address: 0x4017BD, Instruction: mov     eax, ds:___mingw_oldexcpt_handler
Address: 0x4017C2, Instruction: test    eax, eax
Address: 0x4017C4, Instruction: jz      short loc_401802
Address: 0x4017C6, Instruction: mov     [ebp+exception_data], ebx
Address: 0x4017C9, Instruction: lea     esp, [ebp-8]
Address: 0x4017CC, Instruction: pop     ebx
Address: 0x4017CD, Instruction: pop     esi
Address: 0x4017CE, Instruction: pop     ebp
Address: 0x4017CF, Instruction: jmp     eax
Address: 0x4017D1, Instruction: xor     esi, esi
Address: 0x4017D3, Instruction: mov     dword ptr [esp+4], 0; Function
Address: 0x4017DB, Instruction: mov     dword ptr [esp], 8; Signal
Address: 0x4017E2, Instruction: call    _signal
Address: 0x4017E7, Instruction: cmp     old_handler, 1
Address: 0x4017EA, Instruction: jz      loc_401876
Address: 0x4017F0, Instruction: test    old_handler, old_handler
Address: 0x4017F2, Instruction: jz      short loc_4017BD
Address: 0x4017F4, Instruction: mov     dword ptr [esp], 8
Address: 0x4017FB, Instruction: call    old_handler
Address: 0x4017FD, Instruction: mov     eax, 0FFFFFFFFh
Address: 0x401802, Instruction: lea     esp, [ebp-8]
Address: 0x401805, Instruction: pop     ebx
Address: 0x401806, Instruction: pop     esi
Address: 0x401807, Instruction: pop     ebp
Address: 0x401808, Instruction: retn    4
Address: 0x40180B, Instruction: align 10h
Address: 0x401810, Instruction: mov     esi, 1
Address: 0x401815, Instruction: jmp     short loc_4017D3
Address: 0x401817, Instruction: cmp     eax, 0C000001Dh
Address: 0x40181C, Instruction: jnz     short loc_4017BD
Address: 0x40181E, Instruction: mov     dword ptr [esp+4], 0; Function
Address: 0x401826, Instruction: mov     dword ptr [esp], 4; Signal
Address: 0x40182D, Instruction: call    _signal
Address: 0x401832, Instruction: cmp     old_handler, 1
Address: 0x401835, Instruction: jz      short loc_401860
Address: 0x401837, Instruction: test    old_handler, old_handler
Address: 0x401839, Instruction: jz      short loc_4017BD
Address: 0x40183B, Instruction: mov     dword ptr [esp], 4
Address: 0x401842, Instruction: call    old_handler
Address: 0x401844, Instruction: jmp     short loc_4017FD
Address: 0x401846, Instruction: mov     dword ptr [esp+4], 1; Function
Address: 0x40184E, Instruction: mov     dword ptr [esp], 0Bh; Signal
Address: 0x401855, Instruction: call    _signal
Address: 0x40185A, Instruction: jmp     short loc_4017FD
Address: 0x40185C, Instruction: align 10h
Address: 0x401860, Instruction: mov     dword ptr [esp+4], 1; Function
Address: 0x401868, Instruction: mov     dword ptr [esp], 4; Signal
Address: 0x40186F, Instruction: call    _signal
Address: 0x401874, Instruction: jmp     short loc_4017FD
Address: 0x401876, Instruction: mov     dword ptr [esp+4], 1; Function
Address: 0x40187E, Instruction: mov     dword ptr [esp], 8; Signal
Address: 0x401885, Instruction: call    _signal
Address: 0x40188A, Instruction: test    reset_fpu, reset_fpu
Address: 0x40188C, Instruction: jz      loc_4017FD
Address: 0x401892, Instruction: call    _fpreset
Address: 0x401897, Instruction: jmp     loc_4017FD
Address: 0x4018A0, Instruction: xor     eax, eax
Address: 0x4018A2, Instruction: retn
Address: 0x4018B0, Instruction: sub     esp, 3Ch
Address: 0x4018B3, Instruction: mov     eax, ds:_stUserMathErr
Address: 0x4018B8, Instruction: fld     [esp+3Ch+a1]
Address: 0x4018BC, Instruction: fld     [esp+3Ch+a2]
Address: 0x4018C0, Instruction: fld     [esp+3Ch+rslt]
Address: 0x4018C4, Instruction: test    eax, eax
Address: 0x4018C6, Instruction: jz      short loc_4018F1
Address: 0x4018C8, Instruction: fxch    st(2)
Address: 0x4018CA, Instruction: mov     edx, [esp+3Ch+typ]
Address: 0x4018CE, Instruction: fstp    [esp+3Ch+ex.arg1]
Address: 0x4018D2, Instruction: fstp    [esp+3Ch+ex.arg2]
Address: 0x4018D6, Instruction: fstp    [esp+3Ch+ex.retval]
Address: 0x4018DA, Instruction: mov     [esp+3Ch+ex.type], edx
Address: 0x4018DE, Instruction: mov     edx, [esp+3Ch+name]
Address: 0x4018E2, Instruction: mov     [esp+3Ch+ex.name], edx
Address: 0x4018E6, Instruction: lea     edx, [esp+3Ch+ex]
Address: 0x4018EA, Instruction: mov     [esp+3Ch+var_3C], edx; _exception *
Address: 0x4018ED, Instruction: call    eax ; _stUserMathErr
Address: 0x4018EF, Instruction: jmp     short loc_4018F7
Address: 0x4018F1, Instruction: fstp    st
Address: 0x4018F3, Instruction: fstp    st
Address: 0x4018F5, Instruction: fstp    st
Address: 0x4018F7, Instruction: add     esp, 3Ch
Address: 0x4018FA, Instruction: retn
Address: 0x401900, Instruction: mov     eax, [esp+f]
Address: 0x401904, Instruction: mov     ds:_stUserMathErr, eax
Address: 0x401909, Instruction: jmp     ___setusermatherr
Address: 0x401910, Instruction: sub     esp, 3Ch
Address: 0x401913, Instruction: mov     eax, [esp+3Ch+pexcept]
Address: 0x401917, Instruction: mov     edx, [eax]
Address: 0x401919, Instruction: lea     ecx, [edx-1]
Address: 0x40191C, Instruction: mov     edx, offset aUnknownError; "Unknown error"
Address: 0x401921, Instruction: cmp     ecx, 5
Address: 0x401924, Instruction: ja      short loc_40192D
Address: 0x401926, Instruction: mov     edx, ds:_CSWTCH_5[ecx*4]
Address: 0x40192D, Instruction: fld     qword ptr [eax+18h]
Address: 0x401930, Instruction: fstp    [esp+3Ch+var_1C]
Address: 0x401934, Instruction: fld     qword ptr [eax+10h]
Address: 0x401937, Instruction: fstp    [esp+3Ch+var_24]
Address: 0x40193B, Instruction: fld     qword ptr [eax+8]
Address: 0x40193E, Instruction: fstp    [esp+3Ch+var_2C]
Address: 0x401942, Instruction: mov     eax, [eax+4]
Address: 0x401945, Instruction: mov     [esp+3Ch+var_34], type
Address: 0x401949, Instruction: mov     [esp+3Ch+Format], offset Format; "_matherr(): %s in %s(%g, %g)  (retval=%"...
Address: 0x401951, Instruction: mov     [esp+3Ch+var_30], eax
Address: 0x401955, Instruction: mov     eax, ds:__imp___iob
Address: 0x40195A, Instruction: add     eax, 40h ; '@'
Address: 0x40195D, Instruction: mov     [esp+3Ch+Stream], eax; Stream
Address: 0x401960, Instruction: call    _fprintf
Address: 0x401965, Instruction: xor     eax, eax
Address: 0x401967, Instruction: add     esp, 3Ch
Address: 0x40196A, Instruction: retn
Address: 0x401970, Instruction: push    argp
Address: 0x401971, Instruction: sub     esp, 18h
Address: 0x401974, Instruction: mov     eax, ds:__imp___iob
Address: 0x401979, Instruction: mov     [esp+1Ch+ElementCount], 1Bh; ElementCount
Address: 0x401981, Instruction: lea     argp, [esp+1Ch+ArgList]
Address: 0x401985, Instruction: mov     [esp+1Ch+ElementSize], 1; ElementSize
Address: 0x40198D, Instruction: mov     [esp+1Ch+Buffer], offset aMingwW64Runtim; "Mingw-w64 runtime failure:\n"
Address: 0x401994, Instruction: add     eax, 40h ; '@'
Address: 0x401997, Instruction: mov     [esp+1Ch+Stream], eax; Stream
Address: 0x40199B, Instruction: call    _fwrite
Address: 0x4019A0, Instruction: mov     eax, [esp+1Ch+msg]
Address: 0x4019A4, Instruction: mov     [esp+1Ch+ElementCount], argp; ArgList
Address: 0x4019A8, Instruction: mov     [esp+1Ch+ElementSize], eax; Format
Address: 0x4019AC, Instruction: mov     eax, ds:__imp___iob
Address: 0x4019B1, Instruction: add     eax, 40h ; '@'
Address: 0x4019B4, Instruction: mov     [esp+1Ch+Buffer], eax; Stream
Address: 0x4019B7, Instruction: call    _vfprintf
Address: 0x4019BC, Instruction: call    _abort
Address: 0x4019C1, Instruction: jmp     short ___write_memory_part_0
Address: 0x4019C3, Instruction: align 10h
Address: 0x4019D0, Instruction: push    ebp
Address: 0x4019D1, Instruction: mov     ebp, esp
Address: 0x4019D3, Instruction: push    edi
Address: 0x4019D4, Instruction: push    esi
Address: 0x4019D5, Instruction: mov     esi, addr
Address: 0x4019D7, Instruction: push    ebx
Address: 0x4019D8, Instruction: sub     esp, 4Ch
Address: 0x4019DB, Instruction: mov     [ebp+len], len_0
Address: 0x4019DE, Instruction: mov     len_0, ds:_maxSections
Address: 0x4019E4, Instruction: mov     [ebp+src], src_0
Address: 0x4019E7, Instruction: test    ecx, ecx
Address: 0x4019E9, Instruction: jle     loc_401BC0
Address: 0x4019EF, Instruction: mov     src_0, ds:_the_secs
Address: 0x4019F5, Instruction: xor     ebx, ebx
Address: 0x4019F7, Instruction: mov     eax, [edx+4]
Address: 0x4019FA, Instruction: cmp     addr, eax
Address: 0x4019FC, Instruction: jb      short loc_401A0C
Address: 0x4019FE, Instruction: mov     edi, [edx+8]
Address: 0x401A01, Instruction: add     eax, [edi+8]
Address: 0x401A04, Instruction: cmp     addr, eax
Address: 0x401A06, Instruction: jb      loc_401AE0
Address: 0x401A0C, Instruction: add     ebx, 1
Address: 0x401A0F, Instruction: add     edx, 0Ch
Address: 0x401A12, Instruction: cmp     ebx, ecx
Address: 0x401A14, Instruction: jnz     short loc_4019F7
Address: 0x401A16, Instruction: mov     [esp], addr; p
Address: 0x401A19, Instruction: call    ___mingw_GetSectionForAddress
Address: 0x401A1E, Instruction: test    eax, eax
Address: 0x401A20, Instruction: mov     edi, eax
Address: 0x401A22, Instruction: jz      loc_401BE7
Address: 0x401A28, Instruction: lea     ecx, [ebx+ebx*2]
Address: 0x401A2B, Instruction: shl     ecx, 2
Address: 0x401A2E, Instruction: mov     ebx, ecx
Address: 0x401A30, Instruction: add     ebx, ds:_the_secs
Address: 0x401A36, Instruction: mov     [ebp+var_44], ecx
Address: 0x401A39, Instruction: mov     [ebx+8], eax
Address: 0x401A3C, Instruction: mov     dword ptr [ebx], 0
Address: 0x401A42, Instruction: call    __GetPEImageBase
Address: 0x401A47, Instruction: mov     ecx, [ebp+var_44]
Address: 0x401A4A, Instruction: lea     edx, [ebp+b]
Address: 0x401A4D, Instruction: mov     [ebp+lpBuffer], edx
Address: 0x401A50, Instruction: add     eax, [edi+0Ch]
Address: 0x401A53, Instruction: mov     [ebx+4], eax
Address: 0x401A56, Instruction: mov     eax, ds:_the_secs
Address: 0x401A5B, Instruction: mov     [esp+4], edx; lpBuffer
Address: 0x401A5F, Instruction: mov     ebx, ds:__imp__VirtualQuery@12
Address: 0x401A65, Instruction: mov     dword ptr [esp+8], 1Ch; dwLength
Address: 0x401A6D, Instruction: mov     eax, [eax+ecx+4]
Address: 0x401A71, Instruction: mov     [esp], eax; lpAddress
Address: 0x401A74, Instruction: call    ebx ; __imp__VirtualQuery@12
Address: 0x401A76, Instruction: mov     ecx, [ebp+var_44]
Address: 0x401A79, Instruction: mov     edx, [ebp+lpBuffer]
Address: 0x401A7C, Instruction: sub     esp, 0Ch
Address: 0x401A7F, Instruction: test    eax, eax
Address: 0x401A81, Instruction: jz      loc_401BC7
Address: 0x401A87, Instruction: mov     eax, [ebp+b.Protect]
Address: 0x401A8A, Instruction: cmp     eax, 4
Address: 0x401A8D, Instruction: jnz     loc_401B64
Address: 0x401A93, Instruction: add     ds:_maxSections, 1
Address: 0x401A9A, Instruction: mov     dword ptr [esp+8], 1Ch; dwLength
Address: 0x401AA2, Instruction: mov     [esp+4], edx; lpBuffer
Address: 0x401AA6, Instruction: mov     [esp], addr; lpAddress
Address: 0x401AA9, Instruction: call    ebx ; __imp__VirtualQuery@12
Address: 0x401AAB, Instruction: sub     esp, 0Ch
Address: 0x401AAE, Instruction: test    eax, eax
Address: 0x401AB0, Instruction: jz      loc_401BF7
Address: 0x401AB6, Instruction: mov     eax, [ebp+b.Protect]
Address: 0x401AB9, Instruction: cmp     eax, 4
Address: 0x401ABC, Instruction: jnz     short loc_401AF0
Address: 0x401ABE, Instruction: mov     eax, [ebp+len]
Address: 0x401AC1, Instruction: mov     [esp], addr; void *
Address: 0x401AC4, Instruction: mov     [esp+8], eax; Size
Address: 0x401AC8, Instruction: mov     eax, [ebp+src]
Address: 0x401ACB, Instruction: mov     [esp+4], eax; Src
Address: 0x401ACF, Instruction: call    _memcpy
Address: 0x401AD4, Instruction: lea     esp, [ebp-0Ch]
Address: 0x401AD7, Instruction: pop     ebx
Address: 0x401AD8, Instruction: pop     addr
Address: 0x401AD9, Instruction: pop     edi
Address: 0x401ADA, Instruction: pop     ebp
Address: 0x401ADB, Instruction: retn
Address: 0x401ADC, Instruction: align 10h
Address: 0x401AE0, Instruction: lea     edx, [ebp+b]
Address: 0x401AE3, Instruction: mov     ebx, ds:__imp__VirtualQuery@12
Address: 0x401AE9, Instruction: jmp     short loc_401A9A
Address: 0x401AEB, Instruction: align 10h
Address: 0x401AF0, Instruction: cmp     eax, 40h ; '@'
Address: 0x401AF3, Instruction: jz      short loc_401ABE
Address: 0x401AF5, Instruction: mov     eax, [ebp+b.RegionSize]
Address: 0x401AF8, Instruction: lea     edi, [ebp+oldprot]
Address: 0x401AFB, Instruction: mov     ebx, ds:__imp__VirtualProtect@16
Address: 0x401B01, Instruction: mov     [esp+0Ch], edi; lpflOldProtect
Address: 0x401B05, Instruction: mov     dword ptr [esp+8], 40h ; '@'; flNewProtect
Address: 0x401B0D, Instruction: mov     [esp+4], eax; dwSize
Address: 0x401B11, Instruction: mov     eax, [ebp+b.BaseAddress]
Address: 0x401B14, Instruction: mov     [esp], eax; lpAddress
Address: 0x401B17, Instruction: call    ebx ; __imp__VirtualProtect@16
Address: 0x401B19, Instruction: mov     eax, [ebp+len]
Address: 0x401B1C, Instruction: sub     esp, 10h
Address: 0x401B1F, Instruction: mov     [esp+8], eax; Size
Address: 0x401B23, Instruction: mov     eax, [ebp+src]
Address: 0x401B26, Instruction: mov     [esp], addr; void *
Address: 0x401B29, Instruction: mov     [esp+4], eax; Src
Address: 0x401B2D, Instruction: call    _memcpy
Address: 0x401B32, Instruction: mov     eax, [ebp+b.Protect]
Address: 0x401B35, Instruction: cmp     eax, 40h ; '@'
Address: 0x401B38, Instruction: jz      short loc_401AD4
Address: 0x401B3A, Instruction: cmp     eax, 4
Address: 0x401B3D, Instruction: jz      short loc_401AD4
Address: 0x401B3F, Instruction: mov     eax, [ebp+oldprot]
Address: 0x401B42, Instruction: mov     [esp+0Ch], edi; lpflOldProtect
Address: 0x401B46, Instruction: mov     [esp+8], eax; flNewProtect
Address: 0x401B4A, Instruction: mov     eax, [ebp+b.RegionSize]
Address: 0x401B4D, Instruction: mov     [esp+4], eax; dwSize
Address: 0x401B51, Instruction: mov     eax, [ebp+b.BaseAddress]
Address: 0x401B54, Instruction: mov     [esp], eax; lpAddress
Address: 0x401B57, Instruction: call    ebx ; __imp__VirtualProtect@16
Address: 0x401B59, Instruction: sub     esp, 10h
Address: 0x401B5C, Instruction: lea     esp, [ebp-0Ch]
Address: 0x401B5F, Instruction: pop     ebx
Address: 0x401B60, Instruction: pop     addr
Address: 0x401B61, Instruction: pop     edi
Address: 0x401B62, Instruction: pop     ebp
Address: 0x401B63, Instruction: retn
Address: 0x401B64, Instruction: cmp     eax, 40h ; '@'
Address: 0x401B67, Instruction: jz      loc_401A93
Address: 0x401B6D, Instruction: mov     eax, [ebp+b.RegionSize]
Address: 0x401B70, Instruction: add     ecx, ds:_the_secs
Address: 0x401B76, Instruction: mov     [ebp+var_44], edx
Address: 0x401B79, Instruction: mov     dword ptr [esp+8], 40h ; '@'; flNewProtect
Address: 0x401B81, Instruction: mov     [esp+4], eax; dwSize
Address: 0x401B85, Instruction: mov     eax, [ebp+b.BaseAddress]
Address: 0x401B88, Instruction: mov     [esp+0Ch], ecx; lpflOldProtect
Address: 0x401B8C, Instruction: mov     [esp], eax; lpAddress
Address: 0x401B8F, Instruction: call    ds:__imp__VirtualProtect@16
Address: 0x401B95, Instruction: mov     edx, [ebp+var_44]
Address: 0x401B98, Instruction: sub     esp, 10h
Address: 0x401B9B, Instruction: test    eax, eax
Address: 0x401B9D, Instruction: jnz     loc_401A93
Address: 0x401BA3, Instruction: call    ds:__imp__GetLastError@0
Address: 0x401BA9, Instruction: mov     dword ptr [esp], offset msg; "  VirtualProtect failed with code 0x%x"
Address: 0x401BB0, Instruction: mov     [esp+4], eax
Address: 0x401BB4, Instruction: call    ___report_error
Address: 0x401BB9, Instruction: align 10h
Address: 0x401BC0, Instruction: xor     ebx, ebx
Address: 0x401BC2, Instruction: jmp     loc_401A16
Address: 0x401BC7, Instruction: mov     eax, ds:_the_secs
Address: 0x401BCC, Instruction: mov     eax, [eax+ecx+4]
Address: 0x401BD0, Instruction: mov     [esp+8], eax
Address: 0x401BD4, Instruction: mov     eax, [edi+8]
Address: 0x401BD7, Instruction: mov     dword ptr [esp], offset aVirtualqueryFa; "  VirtualQuery failed for %d bytes at a"...
Address: 0x401BDE, Instruction: mov     [esp+4], eax
Address: 0x401BE2, Instruction: call    ___report_error
Address: 0x401BE7, Instruction: mov     [esp+4], addr
Address: 0x401BEB, Instruction: mov     dword ptr [esp], offset aAddressPHasNoI; "Address %p has no image-section"
Address: 0x401BF2, Instruction: call    ___report_error
Address: 0x401BF7, Instruction: mov     [esp+8], addr
Address: 0x401BFB, Instruction: mov     dword ptr [esp+4], 1Ch
Address: 0x401C03, Instruction: mov     dword ptr [esp], offset aVirtualqueryFa; "  VirtualQuery failed for %d bytes at a"...
Address: 0x401C0A, Instruction: call    ___report_error
Address: 0x401C10, Instruction: mov     eax, ds:_was_init_60223
Address: 0x401C15, Instruction: test    eax, eax
Address: 0x401C17, Instruction: jz      short loc_401C20
Address: 0x401C19, Instruction: retn
Address: 0x401C1A, Instruction: align 10h
Address: 0x401C20, Instruction: push    ebp
Address: 0x401C21, Instruction: mov     ebp, esp
Address: 0x401C23, Instruction: push    edi
Address: 0x401C24, Instruction: push    esi
Address: 0x401C25, Instruction: push    ebx
Address: 0x401C26, Instruction: sub     esp, 4Ch
Address: 0x401C29, Instruction: mov     ds:_was_init_60223, 1
Address: 0x401C33, Instruction: call    ___mingw_GetSectionCount
Address: 0x401C38, Instruction: lea     mSecs, [mSecs+mSecs*2]
Address: 0x401C3B, Instruction: lea     eax, ds:1Eh[eax*4]
Address: 0x401C42, Instruction: and     eax, 0FFFFFFF0h
Address: 0x401C45, Instruction: call    ___chkstk_ms
Address: 0x401C4A, Instruction: mov     ds:_maxSections, 0
Address: 0x401C54, Instruction: sub     esp, eax
Address: 0x401C56, Instruction: lea     eax, [esp+5Ch+var_3D]
Address: 0x401C5A, Instruction: and     eax, 0FFFFFFF0h
Address: 0x401C5D, Instruction: mov     ds:_the_secs, eax
Address: 0x401C62, Instruction: mov     eax, offset __RUNTIME_PSEUDO_RELOC_LIST_END___0
Address: 0x401C67, Instruction: sub     eax, offset __rt_psrelocs_start
Address: 0x401C6C, Instruction: cmp     eax, 7
Address: 0x401C6F, Instruction: jle     loc_401D11
Address: 0x401C75, Instruction: cmp     eax, 0Bh
Address: 0x401C78, Instruction: jle     loc_401DE3
Address: 0x401C7E, Instruction: mov     eax, ds:__rt_psrelocs_start
Address: 0x401C83, Instruction: test    eax, eax
Address: 0x401C85, Instruction: jnz     loc_401D19
Address: 0x401C8B, Instruction: mov     eax, ds:dword_404498
Address: 0x401C90, Instruction: test    eax, eax
Address: 0x401C92, Instruction: jnz     loc_401D19
Address: 0x401C98, Instruction: mov     edi, ds:dword_40449C
Address: 0x401C9E, Instruction: mov     ebx, offset unk_4044A0
Address: 0x401CA3, Instruction: test    edi, edi
Address: 0x401CA5, Instruction: jz      loc_401DE8
Address: 0x401CAB, Instruction: mov     ebx, offset __rt_psrelocs_start
Address: 0x401CB0, Instruction: mov     eax, [ebx+8]
Address: 0x401CB3, Instruction: cmp     eax, 1
Address: 0x401CB6, Instruction: jnz     loc_401ED3
Address: 0x401CBC, Instruction: add     ebx, 0Ch
Address: 0x401CBF, Instruction: cmp     ebx, offset __RUNTIME_PSEUDO_RELOC_LIST_END___0
Address: 0x401CC5, Instruction: jnb     short loc_401D11
Address: 0x401CC7, Instruction: mov     edx, [ebx]
Address: 0x401CC9, Instruction: mov     edi, [ebx+4]
Address: 0x401CCC, Instruction: mov     ecx, [edx+400000h]
Address: 0x401CD2, Instruction: lea     eax, [edi+400000h]; addr
Address: 0x401CD8, Instruction: mov     [ebp-3Ch], ecx
Address: 0x401CDB, Instruction: movzx   ecx, byte ptr [ebx+8]
Address: 0x401CDF, Instruction: cmp     ecx, 10h
Address: 0x401CE2, Instruction: jz      loc_401E02
Address: 0x401CE8, Instruction: cmp     ecx, 20h ; ' '
Address: 0x401CEB, Instruction: jz      loc_401E89
Address: 0x401CF1, Instruction: cmp     ecx, 8
Address: 0x401CF4, Instruction: jz      loc_401E51
Address: 0x401CFA, Instruction: mov     [esp+5Ch+lpBuffer], ecx
Address: 0x401CFE, Instruction: mov     [esp+5Ch+msg], offset aUnknownPseudoR; "  Unknown pseudo relocation bit size %d"...
Address: 0x401D05, Instruction: mov     dword ptr [ebp-34h], 0
Address: 0x401D0C, Instruction: call    ___report_error
Address: 0x401D11, Instruction: lea     esp, [ebp-0Ch]
Address: 0x401D14, Instruction: pop     ebx
Address: 0x401D15, Instruction: pop     esi
Address: 0x401D16, Instruction: pop     edi
Address: 0x401D17, Instruction: pop     ebp
Address: 0x401D18, Instruction: retn
Address: 0x401D19, Instruction: mov     ebx, offset __rt_psrelocs_start
Address: 0x401D1E, Instruction: cmp     ebx, offset __RUNTIME_PSEUDO_RELOC_LIST_END___0
Address: 0x401D24, Instruction: jnb     short loc_401D11
Address: 0x401D26, Instruction: lea     eax, [ebp-34h]
Address: 0x401D29, Instruction: mov     [ebp-3Ch], eax
Address: 0x401D2C, Instruction: lea     esi, [esi+0]
Address: 0x401D30, Instruction: mov     edx, [ebx+4]
Address: 0x401D33, Instruction: mov     ecx, 4; len
Address: 0x401D38, Instruction: add     ebx, 8
Address: 0x401D3B, Instruction: lea     eax, [edx+400000h]; addr
Address: 0x401D41, Instruction: mov     edx, [edx+400000h]
Address: 0x401D47, Instruction: add     edx, [ebx-8]
Address: 0x401D4A, Instruction: mov     [ebp-34h], edx
Address: 0x401D4D, Instruction: mov     edx, [ebp-3Ch]; src
Address: 0x401D50, Instruction: call    ___write_memory_part_0
Address: 0x401D55, Instruction: cmp     ebx, offset __RUNTIME_PSEUDO_RELOC_LIST_END___0
Address: 0x401D5B, Instruction: jb      short loc_401D30
Address: 0x401D5D, Instruction: mov     eax, ds:_maxSections
Address: 0x401D62, Instruction: xor     ebx, ebx
Address: 0x401D64, Instruction: test    eax, eax
Address: 0x401D66, Instruction: jg      short loc_401D7B
Address: 0x401D68, Instruction: jmp     short loc_401D11
Address: 0x401D6A, Instruction: align 10h
Address: 0x401D70, Instruction: add     ebx, 1
Address: 0x401D73, Instruction: cmp     ebx, ds:_maxSections
Address: 0x401D79, Instruction: jge     short loc_401D11
Address: 0x401D7B, Instruction: mov     eax, ds:_the_secs
Address: 0x401D80, Instruction: lea     esi, [ebx+ebx*2]
Address: 0x401D83, Instruction: lea     edi, ds:0[esi*4]
Address: 0x401D8A, Instruction: add     eax, edi
Address: 0x401D8C, Instruction: mov     edx, [eax]
Address: 0x401D8E, Instruction: test    edx, edx
Address: 0x401D90, Instruction: jz      short loc_401D70
Address: 0x401D92, Instruction: mov     ecx, [ebp-3Ch]
Address: 0x401D95, Instruction: mov     [esp+5Ch+dwLength], 1Ch; dwLength
Address: 0x401D9D, Instruction: mov     [esp+5Ch+lpBuffer], ecx; lpBuffer
Address: 0x401DA1, Instruction: mov     eax, [eax+4]
Address: 0x401DA4, Instruction: mov     [esp+5Ch+msg], eax; lpAddress
Address: 0x401DA7, Instruction: call    ds:__imp__VirtualQuery@12
Address: 0x401DAD, Instruction: sub     esp, 0Ch
Address: 0x401DB0, Instruction: test    eax, eax
Address: 0x401DB2, Instruction: jz      loc_401EAE
Address: 0x401DB8, Instruction: lea     eax, [ebp-38h]
Address: 0x401DBB, Instruction: mov     [esp+5Ch+lpflOldProtect], eax; lpflOldProtect
Address: 0x401DBF, Instruction: mov     eax, ds:_the_secs
Address: 0x401DC4, Instruction: mov     eax, [eax+esi*4]
Address: 0x401DC7, Instruction: mov     [esp+5Ch+dwLength], eax; flNewProtect
Address: 0x401DCB, Instruction: mov     eax, [ebp-28h]
Address: 0x401DCE, Instruction: mov     [esp+5Ch+lpBuffer], eax; dwSize
Address: 0x401DD2, Instruction: mov     eax, [ebp-34h]
Address: 0x401DD5, Instruction: mov     [esp+5Ch+msg], eax; lpAddress
Address: 0x401DD8, Instruction: call    ds:__imp__VirtualProtect@16
Address: 0x401DDE, Instruction: sub     esp, 10h
Address: 0x401DE1, Instruction: jmp     short loc_401D70
Address: 0x401DE3, Instruction: mov     ebx, offset __rt_psrelocs_start
Address: 0x401DE8, Instruction: mov     esi, [ebx]
Address: 0x401DEA, Instruction: test    esi, esi
Address: 0x401DEC, Instruction: jnz     loc_401D1E
Address: 0x401DF2, Instruction: mov     ecx, [ebx+4]
Address: 0x401DF5, Instruction: test    ecx, ecx
Address: 0x401DF7, Instruction: jz      loc_401CB0
Address: 0x401DFD, Instruction: jmp     loc_401D1E
Address: 0x401E02, Instruction: movzx   ecx, word ptr [edi+400000h]
Address: 0x401E09, Instruction: movzx   edi, cx
Address: 0x401E0C, Instruction: mov     esi, edi
Address: 0x401E0E, Instruction: or      esi, 0FFFF0000h
Address: 0x401E14, Instruction: test    cx, cx
Address: 0x401E17, Instruction: cmovs   edi, esi
Address: 0x401E1A, Instruction: mov     esi, [ebp-3Ch]
Address: 0x401E1D, Instruction: sub     edi, edx
Address: 0x401E1F, Instruction: lea     ecx, [ebp-34h]
Address: 0x401E22, Instruction: sub     edi, 400000h
Address: 0x401E28, Instruction: mov     [ebp-3Ch], ecx
Address: 0x401E2B, Instruction: lea     edx, [ebp-34h]; src
Address: 0x401E2E, Instruction: mov     ecx, 2; len
Address: 0x401E33, Instruction: add     esi, edi
Address: 0x401E35, Instruction: mov     [ebp-34h], esi
Address: 0x401E38, Instruction: call    ___write_memory_part_0
Address: 0x401E3D, Instruction: add     ebx, 0Ch
Address: 0x401E40, Instruction: cmp     ebx, offset __RUNTIME_PSEUDO_RELOC_LIST_END___0
Address: 0x401E46, Instruction: jb      loc_401CC7
Address: 0x401E4C, Instruction: jmp     loc_401D5D
Address: 0x401E51, Instruction: movzx   ecx, byte ptr [eax]
Address: 0x401E54, Instruction: movzx   edi, cl
Address: 0x401E57, Instruction: mov     esi, edi
Address: 0x401E59, Instruction: or      esi, 0FFFFFF00h
Address: 0x401E5F, Instruction: test    cl, cl
Address: 0x401E61, Instruction: cmovs   edi, esi
Address: 0x401E64, Instruction: mov     esi, [ebp-3Ch]
Address: 0x401E67, Instruction: sub     edi, 400000h
Address: 0x401E6D, Instruction: sub     edi, edx
Address: 0x401E6F, Instruction: lea     ecx, [ebp-34h]
Address: 0x401E72, Instruction: add     esi, edi
Address: 0x401E74, Instruction: mov     [ebp-3Ch], ecx
Address: 0x401E77, Instruction: lea     edx, [ebp-34h]; src
Address: 0x401E7A, Instruction: mov     ecx, 1; len
Address: 0x401E7F, Instruction: mov     [ebp-34h], esi
Address: 0x401E82, Instruction: call    ___write_memory_part_0
Address: 0x401E87, Instruction: jmp     short loc_401E3D
Address: 0x401E89, Instruction: mov     esi, [ebp-3Ch]
Address: 0x401E8C, Instruction: add     edx, 400000h
Address: 0x401E92, Instruction: lea     ecx, [ebp-34h]
Address: 0x401E95, Instruction: mov     [ebp-3Ch], ecx
Address: 0x401E98, Instruction: mov     ecx, 4; len
Address: 0x401E9D, Instruction: sub     esi, edx
Address: 0x401E9F, Instruction: add     esi, [eax]
Address: 0x401EA1, Instruction: lea     edx, [ebp-34h]; src
Address: 0x401EA4, Instruction: mov     [ebp-34h], esi
Address: 0x401EA7, Instruction: call    ___write_memory_part_0
Address: 0x401EAC, Instruction: jmp     short loc_401E3D
Address: 0x401EAE, Instruction: mov     ecx, ds:_the_secs
Address: 0x401EB4, Instruction: add     ecx, edi
Address: 0x401EB6, Instruction: mov     eax, [ecx+4]
Address: 0x401EB9, Instruction: mov     [esp+5Ch+dwLength], eax
Address: 0x401EBD, Instruction: mov     eax, [ecx+8]
Address: 0x401EC0, Instruction: mov     eax, [eax+8]
Address: 0x401EC3, Instruction: mov     [esp+5Ch+msg], offset aVirtualqueryFa; "  VirtualQuery failed for %d bytes at a"...
Address: 0x401ECA, Instruction: mov     [esp+5Ch+lpBuffer], eax
Address: 0x401ECE, Instruction: call    ___report_error
Address: 0x401ED3, Instruction: mov     [esp+5Ch+lpBuffer], eax
Address: 0x401ED7, Instruction: mov     [esp+5Ch+msg], offset aUnknownPseudoR_0; "  Unknown pseudo relocation protocol ve"...
Address: 0x401EDE, Instruction: call    ___report_error
Address: 0x401EF0, Instruction: fninit
Address: 0x401EF2, Instruction: retn
Address: 0x401F00, Instruction: mov     eax, _p_59264
Address: 0x401F05, Instruction: mov     eax, [eax]
Address: 0x401F07, Instruction: test    eax, eax
Address: 0x401F09, Instruction: jz      short locret_401F2A
Address: 0x401F0B, Instruction: sub     esp, 0Ch
Address: 0x401F0E, Instruction: xchg    ax, ax
Address: 0x401F10, Instruction: call    eax
Address: 0x401F12, Instruction: mov     eax, _p_59264
Address: 0x401F17, Instruction: lea     edx, [eax+4]
Address: 0x401F1A, Instruction: mov     eax, [eax+4]
Address: 0x401F1D, Instruction: mov     _p_59264, edx
Address: 0x401F23, Instruction: test    eax, eax
Address: 0x401F25, Instruction: jnz     short loc_401F10
Address: 0x401F27, Instruction: add     esp, 0Ch
Address: 0x401F2A, Instruction: rep retn
Address: 0x401F30, Instruction: push    ebx
Address: 0x401F31, Instruction: sub     esp, 18h
Address: 0x401F34, Instruction: mov     ebx, ds:___CTOR_LIST__
Address: 0x401F3A, Instruction: cmp     nptrs, 0FFFFFFFFh
Address: 0x401F3D, Instruction: jz      short loc_401F63
Address: 0x401F3F, Instruction: test    i, i
Address: 0x401F41, Instruction: jz      short loc_401F52
Address: 0x401F43, Instruction: call    ds:___CTOR_LIST__[i*4]
Address: 0x401F4A, Instruction: sub     ebx, 1
Address: 0x401F4D, Instruction: lea     esi, [esi+0]
Address: 0x401F50, Instruction: jnz     short loc_401F43
Address: 0x401F52, Instruction: mov     [esp+1Ch+func], offset ___do_global_dtors; func
Address: 0x401F59, Instruction: call    _atexit
Address: 0x401F5E, Instruction: add     esp, 18h
Address: 0x401F61, Instruction: pop     i
Address: 0x401F62, Instruction: retn
Address: 0x401F63, Instruction: xor     nptrs, nptrs
Address: 0x401F65, Instruction: jmp     short loc_401F69
Address: 0x401F67, Instruction: mov     nptrs, eax
Address: 0x401F69, Instruction: lea     eax, [nptrs+1]
Address: 0x401F6C, Instruction: mov     edx, ds:___CTOR_LIST__[eax*4]
Address: 0x401F73, Instruction: test    edx, edx
Address: 0x401F75, Instruction: jnz     short loc_401F67
Address: 0x401F77, Instruction: jmp     short loc_401F3F
Address: 0x401F80, Instruction: mov     ecx, ds:_initialized
Address: 0x401F86, Instruction: test    ecx, ecx
Address: 0x401F88, Instruction: jz      short loc_401F90
Address: 0x401F8A, Instruction: rep retn
Address: 0x401F8C, Instruction: align 10h
Address: 0x401F90, Instruction: mov     ds:_initialized, 1
Address: 0x401F9A, Instruction: jmp     short ___do_global_ctors
Address: 0x401FA0, Instruction: push    ebp
Address: 0x401FA1, Instruction: mov     ebp, esp
Address: 0x401FA3, Instruction: push    edi
Address: 0x401FA4, Instruction: push    esi
Address: 0x401FA5, Instruction: push    ebx
Address: 0x401FA6, Instruction: sub     esp, 2Ch
Address: 0x401FA9, Instruction: mov     eax, ___security_cookie
Address: 0x401FAE, Instruction: mov     dword ptr [ebp+systime], 0
Address: 0x401FB5, Instruction: mov     dword ptr [ebp+systime+4], 0
Address: 0x401FBC, Instruction: cmp     eax, 0BB40E64Eh
Address: 0x401FC1, Instruction: jz      short loc_401FD2
Address: 0x401FC3, Instruction: not     eax
Address: 0x401FC5, Instruction: mov     ___security_cookie_complement, eax
Address: 0x401FCA, Instruction: lea     esp, [ebp-0Ch]
Address: 0x401FCD, Instruction: pop     ebx
Address: 0x401FCE, Instruction: pop     esi
Address: 0x401FCF, Instruction: pop     edi
Address: 0x401FD0, Instruction: pop     ebp
Address: 0x401FD1, Instruction: retn
Address: 0x401FD2, Instruction: lea     eax, [ebp+systime]
Address: 0x401FD5, Instruction: mov     [esp], eax; lpSystemTimeAsFileTime
Address: 0x401FD8, Instruction: call    ds:__imp__GetSystemTimeAsFileTime@4
Address: 0x401FDE, Instruction: mov     esi, dword ptr [ebp+systime]
Address: 0x401FE1, Instruction: mov     edi, dword ptr [ebp+systime+4]
Address: 0x401FE4, Instruction: xor     esi, edi
Address: 0x401FE6, Instruction: sub     esp, 4
Address: 0x401FE9, Instruction: call    ds:__imp__GetCurrentProcessId@0
Address: 0x401FEF, Instruction: mov     ebx, eax
Address: 0x401FF1, Instruction: call    ds:__imp__GetCurrentThreadId@0
Address: 0x401FF7, Instruction: mov     [ebp+var_2C], eax
Address: 0x401FFA, Instruction: call    ds:__imp__GetTickCount@0
Address: 0x402000, Instruction: mov     [ebp+var_30], eax
Address: 0x402003, Instruction: lea     eax, [ebp+perfctr]
Address: 0x402006, Instruction: mov     [esp], eax; lpPerformanceCount
Address: 0x402009, Instruction: call    ds:__imp__QueryPerformanceCounter@4
Address: 0x40200F, Instruction: xor     esi, dword ptr [ebp+perfctr]
Address: 0x402012, Instruction: xor     esi, dword ptr [ebp+perfctr+4]
Address: 0x402015, Instruction: xor     esi, ebx
Address: 0x402017, Instruction: xor     esi, [ebp+var_2C]
Address: 0x40201A, Instruction: sub     esp, 4
Address: 0x40201D, Instruction: xor     esi, [ebp+var_30]
Address: 0x402020, Instruction: cmp     cookie, 0BB40E64Eh
Address: 0x402026, Instruction: jz      short loc_402040
Address: 0x402028, Instruction: mov     eax, cookie
Address: 0x40202A, Instruction: not     eax
Address: 0x40202C, Instruction: mov     ___security_cookie, cookie
Address: 0x402032, Instruction: mov     ___security_cookie_complement, eax
Address: 0x402037, Instruction: lea     esp, [ebp-0Ch]
Address: 0x40203A, Instruction: pop     ebx
Address: 0x40203B, Instruction: pop     cookie
Address: 0x40203C, Instruction: pop     edi
Address: 0x40203D, Instruction: pop     ebp
Address: 0x40203E, Instruction: retn
Address: 0x40203F, Instruction: align 10h
Address: 0x402040, Instruction: mov     eax, 44BF19B0h
Address: 0x402045, Instruction: mov     cookie, 0BB40E64Fh
Address: 0x40204A, Instruction: jmp     short loc_40202C
Address: 0x402050, Instruction: push    ebp
Address: 0x402051, Instruction: mov     ebp, esp
Address: 0x402053, Instruction: sub     esp, 28h
Address: 0x402056, Instruction: mov     eax, [ebp+4]
Address: 0x402059, Instruction: lea     edx, [ebp+4]
Address: 0x40205C, Instruction: mov     ds:_GS_ContextRecord._Esp, edx
Address: 0x402062, Instruction: mov     ds:_GS_ExceptionRecord.ExceptionCode, 0C0000409h
Address: 0x40206C, Instruction: mov     ds:_GS_ExceptionRecord.ExceptionFlags, 1
Address: 0x402076, Instruction: mov     ds:_GS_ContextRecord._Eip, eax
Address: 0x40207B, Instruction: mov     ds:_GS_ExceptionRecord.ExceptionAddress, eax
Address: 0x402080, Instruction: mov     eax, [ebp+StackCookie]
Address: 0x402083, Instruction: mov     dword ptr [esp], 0; lpTopLevelExceptionFilter
Address: 0x40208A, Instruction: mov     ds:_GS_ContextRecord._Ecx, eax
Address: 0x40208F, Instruction: mov     eax, ___security_cookie
Address: 0x402094, Instruction: mov     [ebp+cookie], eax
Address: 0x402097, Instruction: mov     eax, ___security_cookie_complement
Address: 0x40209C, Instruction: mov     [ebp+cookie+4], eax
Address: 0x40209F, Instruction: call    ds:__imp__SetUnhandledExceptionFilter@4
Address: 0x4020A5, Instruction: sub     esp, 4
Address: 0x4020A8, Instruction: mov     dword ptr [esp], offset _GS_ExceptionPointers; ExceptionInfo
Address: 0x4020AF, Instruction: call    ds:__imp__UnhandledExceptionFilter@4
Address: 0x4020B5, Instruction: sub     esp, 4
Address: 0x4020B8, Instruction: call    ds:__imp__GetCurrentProcess@0
Address: 0x4020BE, Instruction: mov     dword ptr [esp+4], 0C0000409h; uExitCode
Address: 0x4020C6, Instruction: mov     [esp], eax; hProcess
Address: 0x4020C9, Instruction: call    ds:__imp__TerminateProcess@8
Address: 0x4020CF, Instruction: sub     esp, 8
Address: 0x4020D2, Instruction: call    _abort
Address: 0x4020E0, Instruction: push    ebp
Address: 0x4020E1, Instruction: mov     ebp, esp
Address: 0x4020E3, Instruction: push    edi
Address: 0x4020E4, Instruction: push    esi
Address: 0x4020E5, Instruction: push    ebx
Address: 0x4020E6, Instruction: sub     esp, 1Ch
Address: 0x4020E9, Instruction: mov     dword ptr [esp], offset ___mingwthr_cs; lpCriticalSection
Address: 0x4020F0, Instruction: call    ds:__imp__EnterCriticalSection@4
Address: 0x4020F6, Instruction: mov     edi, ds:_key_dtor_list
Address: 0x4020FC, Instruction: mov     esi, ds:__imp__GetLastError@0
Address: 0x402102, Instruction: sub     esp, 4
Address: 0x402105, Instruction: test    keyp, keyp
Address: 0x402107, Instruction: jz      short loc_402139
Address: 0x402109, Instruction: lea     esi, [esi+0]
Address: 0x402110, Instruction: mov     eax, [keyp]
Address: 0x402112, Instruction: mov     [esp], eax; dwTlsIndex
Address: 0x402115, Instruction: call    ds:__imp__TlsGetValue@4
Address: 0x40211B, Instruction: sub     esp, 4
Address: 0x40211E, Instruction: mov     ebx, eax
Address: 0x402120, Instruction: call    esi ; __imp__GetLastError@0
Address: 0x402122, Instruction: test    eax, eax
Address: 0x402124, Instruction: jnz     short loc_402132
Address: 0x402126, Instruction: test    value, value
Address: 0x402128, Instruction: jz      short loc_402132
Address: 0x40212A, Instruction: mov     eax, [keyp+4]
Address: 0x40212D, Instruction: mov     [esp], value
Address: 0x402130, Instruction: call    eax
Address: 0x402132, Instruction: mov     keyp, [keyp+8]
Address: 0x402135, Instruction: test    keyp, keyp
Address: 0x402137, Instruction: jnz     short loc_402110
Address: 0x402139, Instruction: mov     dword ptr [esp], offset ___mingwthr_cs; lpCriticalSection
Address: 0x402140, Instruction: call    ds:__imp__LeaveCriticalSection@4
Address: 0x402146, Instruction: sub     esp, 4
Address: 0x402149, Instruction: lea     esp, [ebp-0Ch]
Address: 0x40214C, Instruction: pop     ebx
Address: 0x40214D, Instruction: pop     esi
Address: 0x40214E, Instruction: pop     keyp
Address: 0x40214F, Instruction: pop     ebp
Address: 0x402150, Instruction: retn
Address: 0x402160, Instruction: push    ebp
Address: 0x402161, Instruction: mov     ebp, esp
Address: 0x402163, Instruction: push    esi
Address: 0x402164, Instruction: xor     esi, esi
Address: 0x402166, Instruction: push    ebx
Address: 0x402167, Instruction: sub     esp, 10h
Address: 0x40216A, Instruction: mov     eax, ds:___mingwthr_cs_init
Address: 0x40216F, Instruction: test    eax, eax
Address: 0x402171, Instruction: jnz     short loc_402180
Address: 0x402173, Instruction: lea     esp, [ebp-8]
Address: 0x402176, Instruction: mov     eax, esi
Address: 0x402178, Instruction: pop     ebx
Address: 0x402179, Instruction: pop     esi
Address: 0x40217A, Instruction: pop     ebp
Address: 0x40217B, Instruction: retn
Address: 0x40217C, Instruction: align 10h
Address: 0x402180, Instruction: mov     dword ptr [esp+4], 0Ch; Size
Address: 0x402188, Instruction: mov     dword ptr [esp], 1; Count
Address: 0x40218F, Instruction: call    _calloc
Address: 0x402194, Instruction: test    eax, eax
Address: 0x402196, Instruction: mov     ebx, eax
Address: 0x402198, Instruction: jz      short loc_4021DC
Address: 0x40219A, Instruction: mov     new_key, [ebp+key]
Address: 0x40219D, Instruction: mov     dword ptr [esp], offset ___mingwthr_cs; lpCriticalSection
Address: 0x4021A4, Instruction: mov     [new_key], eax
Address: 0x4021A6, Instruction: mov     eax, [ebp+dtor]
Address: 0x4021A9, Instruction: mov     [new_key+4], eax
Address: 0x4021AC, Instruction: call    ds:__imp__EnterCriticalSection@4
Address: 0x4021B2, Instruction: mov     eax, ds:_key_dtor_list
Address: 0x4021B7, Instruction: mov     ds:_key_dtor_list, new_key
Address: 0x4021BD, Instruction: mov     [new_key+8], eax
Address: 0x4021C0, Instruction: sub     esp, 4
Address: 0x4021C3, Instruction: mov     dword ptr [esp], offset ___mingwthr_cs; lpCriticalSection
Address: 0x4021CA, Instruction: call    ds:__imp__LeaveCriticalSection@4
Address: 0x4021D0, Instruction: mov     eax, esi
Address: 0x4021D2, Instruction: sub     esp, 4
Address: 0x4021D5, Instruction: lea     esp, [ebp-8]
Address: 0x4021D8, Instruction: pop     new_key
Address: 0x4021D9, Instruction: pop     esi
Address: 0x4021DA, Instruction: pop     ebp
Address: 0x4021DB, Instruction: retn
Address: 0x4021DC, Instruction: mov     esi, 0FFFFFFFFh
Address: 0x4021E1, Instruction: jmp     short loc_402173
Address: 0x4021F0, Instruction: push    ebp
Address: 0x4021F1, Instruction: mov     ebp, esp
Address: 0x4021F3, Instruction: push    ebx
Address: 0x4021F4, Instruction: sub     esp, 14h
Address: 0x4021F7, Instruction: mov     eax, ds:___mingwthr_cs_init
Address: 0x4021FC, Instruction: mov     ebx, [ebp+key]
Address: 0x4021FF, Instruction: test    eax, eax
Address: 0x402201, Instruction: jnz     short loc_402210
Address: 0x402203, Instruction: xor     eax, eax
Address: 0x402205, Instruction: mov     ebx, [ebp+var_4]
Address: 0x402208, Instruction: leave
Address: 0x402209, Instruction: retn
Address: 0x40220A, Instruction: align 10h
Address: 0x402210, Instruction: mov     dword ptr [esp], offset ___mingwthr_cs; lpCriticalSection
Address: 0x402217, Instruction: call    ds:__imp__EnterCriticalSection@4
Address: 0x40221D, Instruction: mov     edx, ds:_key_dtor_list
Address: 0x402223, Instruction: sub     esp, 4
Address: 0x402226, Instruction: test    cur_key, cur_key
Address: 0x402228, Instruction: jz      short loc_402241
Address: 0x40222A, Instruction: mov     eax, [cur_key]
Address: 0x40222C, Instruction: cmp     eax, ebx
Address: 0x40222E, Instruction: jnz     short loc_40223A
Address: 0x402230, Instruction: jmp     short loc_402278
Address: 0x402232, Instruction: mov     ecx, [cur_key]
Address: 0x402234, Instruction: cmp     ecx, ebx
Address: 0x402236, Instruction: jz      short loc_402258
Address: 0x402238, Instruction: mov     prev_key, cur_key
Address: 0x40223A, Instruction: mov     eax, [cur_key+8]
Address: 0x40223D, Instruction: test    cur_key, cur_key
Address: 0x40223F, Instruction: jnz     short loc_402232
Address: 0x402241, Instruction: mov     dword ptr [esp], offset ___mingwthr_cs; lpCriticalSection
Address: 0x402248, Instruction: call    ds:__imp__LeaveCriticalSection@4
Address: 0x40224E, Instruction: sub     esp, 4
Address: 0x402251, Instruction: xor     eax, eax
Address: 0x402253, Instruction: mov     ebx, [ebp+var_4]
Address: 0x402256, Instruction: leave
Address: 0x402257, Instruction: retn
Address: 0x402258, Instruction: mov     ecx, [cur_key+8]
Address: 0x40225B, Instruction: mov     [prev_key+8], ecx
Address: 0x40225E, Instruction: mov     [esp], cur_key; Block
Address: 0x402261, Instruction: call    _free
Address: 0x402266, Instruction: mov     dword ptr [esp], offset ___mingwthr_cs; lpCriticalSection
Address: 0x40226D, Instruction: call    ds:__imp__LeaveCriticalSection@4
Address: 0x402273, Instruction: sub     esp, 4
Address: 0x402276, Instruction: jmp     short loc_402251
Address: 0x402278, Instruction: mov     eax, [cur_key+8]
Address: 0x40227B, Instruction: mov     ds:_key_dtor_list, eax
Address: 0x402280, Instruction: mov     eax, cur_key
Address: 0x402282, Instruction: jmp     short loc_40225E
Address: 0x402290, Instruction: push    ebp
Address: 0x402291, Instruction: mov     ebp, esp
Address: 0x402293, Instruction: sub     esp, 18h
Address: 0x402296, Instruction: mov     eax, [ebp+reason]
Address: 0x402299, Instruction: cmp     eax, 1
Address: 0x40229C, Instruction: jz      short loc_4022E4
Address: 0x40229E, Instruction: jb      short loc_4022B5
Address: 0x4022A0, Instruction: cmp     eax, 3
Address: 0x4022A3, Instruction: jnz     short loc_4022AE
Address: 0x4022A5, Instruction: mov     eax, ds:___mingwthr_cs_init
Address: 0x4022AA, Instruction: test    eax, eax
Address: 0x4022AC, Instruction: jnz     short loc_402312
Address: 0x4022AE, Instruction: mov     eax, 1
Address: 0x4022B3, Instruction: leave
Address: 0x4022B4, Instruction: retn
Address: 0x4022B5, Instruction: mov     eax, ds:___mingwthr_cs_init
Address: 0x4022BA, Instruction: test    eax, eax
Address: 0x4022BC, Instruction: jnz     short loc_402320
Address: 0x4022BE, Instruction: mov     eax, ds:___mingwthr_cs_init
Address: 0x4022C3, Instruction: cmp     eax, 1
Address: 0x4022C6, Instruction: jnz     short loc_4022AE
Address: 0x4022C8, Instruction: mov     ds:___mingwthr_cs_init, 0
Address: 0x4022D2, Instruction: mov     dword ptr [esp], offset ___mingwthr_cs; lpCriticalSection
Address: 0x4022D9, Instruction: call    ds:__imp__DeleteCriticalSection@4
Address: 0x4022DF, Instruction: sub     esp, 4
Address: 0x4022E2, Instruction: jmp     short loc_4022AE
Address: 0x4022E4, Instruction: mov     eax, ds:___mingwthr_cs_init
Address: 0x4022E9, Instruction: test    eax, eax
Address: 0x4022EB, Instruction: jz      short loc_402300
Address: 0x4022ED, Instruction: mov     ds:___mingwthr_cs_init, 1
Address: 0x4022F7, Instruction: mov     eax, 1
Address: 0x4022FC, Instruction: leave
Address: 0x4022FD, Instruction: retn
Address: 0x4022FE, Instruction: align 10h
Address: 0x402300, Instruction: mov     dword ptr [esp], offset ___mingwthr_cs; lpCriticalSection
Address: 0x402307, Instruction: call    ds:__imp__InitializeCriticalSection@4
Address: 0x40230D, Instruction: sub     esp, 4
Address: 0x402310, Instruction: jmp     short loc_4022ED
Address: 0x402312, Instruction: call    ___mingwthr_run_key_dtors_part_0
Address: 0x402317, Instruction: jmp     short loc_4022AE
Address: 0x402319, Instruction: align 10h
Address: 0x402320, Instruction: call    ___mingwthr_run_key_dtors_part_0
Address: 0x402325, Instruction: jmp     short loc_4022BE
Address: 0x402330, Instruction: add     pImageBase, [pImageBase+3Ch]
Address: 0x402333, Instruction: cmp     dword ptr [pNTHeader], 4550h
Address: 0x402339, Instruction: jz      short loc_402340
Address: 0x40233B, Instruction: xor     pNTHeader, pNTHeader
Address: 0x40233D, Instruction: retn
Address: 0x40233E, Instruction: align 10h
Address: 0x402340, Instruction: cmp     word ptr [pNTHeader+18h], 10Bh
Address: 0x402346, Instruction: setz    al
Address: 0x402349, Instruction: movzx   eax, al
Address: 0x40234C, Instruction: retn
Address: 0x402350, Instruction: mov     eax, [esp+pDOSHeader]
Address: 0x402354, Instruction: cmp     word ptr [eax], 5A4Dh
Address: 0x402359, Instruction: jz      short loc_402360
Address: 0x40235B, Instruction: xor     eax, eax
Address: 0x40235D, Instruction: retn
Address: 0x40235E, Instruction: align 10h
Address: 0x402360, Instruction: jmp     short __ValidateImageBase_part_0
Address: 0x402370, Instruction: push    esi
Address: 0x402371, Instruction: push    ebx
Address: 0x402372, Instruction: mov     edx, [esp+8+pImageBase]
Address: 0x402376, Instruction: mov     ebx, [esp+8+rva]
Address: 0x40237A, Instruction: add     edx, [edx+3Ch]
Address: 0x40237D, Instruction: movzx   esi, word ptr [pNTHeader+6]
Address: 0x402381, Instruction: movzx   eax, word ptr [pNTHeader+14h]
Address: 0x402385, Instruction: test    esi, esi
Address: 0x402387, Instruction: lea     eax, [pNTHeader+eax+18h]
Address: 0x40238B, Instruction: jz      short loc_4023A8
Address: 0x40238D, Instruction: xor     pNTHeader, pNTHeader
Address: 0x40238F, Instruction: nop
Address: 0x402390, Instruction: mov     ecx, [pSection+0Ch]
Address: 0x402393, Instruction: cmp     ecx, ebx
Address: 0x402395, Instruction: ja      short loc_40239E
Address: 0x402397, Instruction: add     ecx, [pSection+8]
Address: 0x40239A, Instruction: cmp     ebx, ecx
Address: 0x40239C, Instruction: jb      short loc_4023AA
Address: 0x40239E, Instruction: add     iSection, 1
Address: 0x4023A1, Instruction: add     pSection, 28h ; '('
Address: 0x4023A4, Instruction: cmp     iSection, esi
Address: 0x4023A6, Instruction: jb      short loc_402390
Address: 0x4023A8, Instruction: xor     pSection, pSection
Address: 0x4023AA, Instruction: pop     rva_0
Address: 0x4023AB, Instruction: pop     esi
Address: 0x4023AC, Instruction: retn
Address: 0x4023B0, Instruction: push    ebp
Address: 0x4023B1, Instruction: push    edi
Address: 0x4023B2, Instruction: push    esi
Address: 0x4023B3, Instruction: xor     esi, esi
Address: 0x4023B5, Instruction: push    ebx
Address: 0x4023B6, Instruction: sub     esp, 1Ch
Address: 0x4023B9, Instruction: mov     edi, [esp+2Ch+pName]
Address: 0x4023BD, Instruction: mov     [esp+2Ch+Str], edi; Str
Address: 0x4023C0, Instruction: call    _strlen
Address: 0x4023C5, Instruction: cmp     eax, 8
Address: 0x4023C8, Instruction: ja      short loc_4023D5
Address: 0x4023CA, Instruction: cmp     word ptr ds:400000h, 5A4Dh
Address: 0x4023D3, Instruction: jz      short loc_4023E0
Address: 0x4023D5, Instruction: add     esp, 1Ch
Address: 0x4023D8, Instruction: mov     eax, esi
Address: 0x4023DA, Instruction: pop     ebx
Address: 0x4023DB, Instruction: pop     esi
Address: 0x4023DC, Instruction: pop     edi
Address: 0x4023DD, Instruction: pop     ebp
Address: 0x4023DE, Instruction: retn
Address: 0x4023DF, Instruction: align 10h
Address: 0x4023E0, Instruction: mov     eax, 400000h; pImageBase
Address: 0x4023E5, Instruction: call    __ValidateImageBase_part_0
Address: 0x4023EA, Instruction: test    eax, eax
Address: 0x4023EC, Instruction: jz      short loc_4023D5
Address: 0x4023EE, Instruction: mov     eax, ds:40003Ch
Address: 0x4023F3, Instruction: lea     edx, [eax+400000h]
Address: 0x4023F9, Instruction: movzx   eax, word ptr [eax+400014h]
Address: 0x402400, Instruction: movzx   ebp, word ptr [pNTHeader+6]
Address: 0x402404, Instruction: lea     ebx, [pNTHeader+eax+18h]
Address: 0x402408, Instruction: test    ebp, ebp
Address: 0x40240A, Instruction: jnz     short loc_40241A
Address: 0x40240C, Instruction: jmp     short loc_4023D5
Address: 0x40240E, Instruction: align 10h
Address: 0x402410, Instruction: add     iSection, 1
Address: 0x402413, Instruction: add     pSection, 28h ; '('
Address: 0x402416, Instruction: cmp     iSection, ebp
Address: 0x402418, Instruction: jnb     short loc_402440
Address: 0x40241A, Instruction: mov     [esp+2Ch+MaxCount], 8; MaxCount
Address: 0x402422, Instruction: mov     [esp+2Ch+Str2], edi; Str2
Address: 0x402426, Instruction: mov     [esp+2Ch+Str], pSection; Str1
Address: 0x402429, Instruction: call    _strncmp
Address: 0x40242E, Instruction: test    eax, eax
Address: 0x402430, Instruction: jnz     short loc_402410
Address: 0x402432, Instruction: add     esp, 1Ch
Address: 0x402435, Instruction: mov     iSection, pSection
Address: 0x402437, Instruction: mov     eax, esi
Address: 0x402439, Instruction: pop     pSection
Address: 0x40243A, Instruction: pop     esi
Address: 0x40243B, Instruction: pop     edi
Address: 0x40243C, Instruction: pop     ebp
Address: 0x40243D, Instruction: retn
Address: 0x40243E, Instruction: align 10h
Address: 0x402440, Instruction: add     esp, 1Ch
Address: 0x402443, Instruction: xor     iSection, iSection
Address: 0x402445, Instruction: pop     pSection
Address: 0x402446, Instruction: mov     eax, esi
Address: 0x402448, Instruction: pop     esi
Address: 0x402449, Instruction: pop     edi
Address: 0x40244A, Instruction: pop     ebp
Address: 0x40244B, Instruction: retn
Address: 0x402450, Instruction: push    ebx
Address: 0x402451, Instruction: xor     ebx, ebx
Address: 0x402453, Instruction: sub     esp, 8
Address: 0x402456, Instruction: cmp     word ptr ds:400000h, 5A4Dh
Address: 0x40245F, Instruction: jz      short loc_402468
Address: 0x402461, Instruction: add     esp, 8
Address: 0x402464, Instruction: mov     eax, ebx
Address: 0x402466, Instruction: pop     ebx
Address: 0x402467, Instruction: retn
Address: 0x402468, Instruction: mov     eax, 400000h; pImageBase
Address: 0x40246D, Instruction: call    __ValidateImageBase_part_0
Address: 0x402472, Instruction: test    eax, eax
Address: 0x402474, Instruction: jz      short loc_402461
Address: 0x402476, Instruction: mov     eax, [esp+0Ch+p]
Address: 0x40247A, Instruction: mov     [esp+0Ch+pImageBase], 400000h; pImageBase
Address: 0x402481, Instruction: sub     eax, 400000h
Address: 0x402486, Instruction: mov     [esp+0Ch+var_8], rva; rva
Address: 0x40248A, Instruction: call    __FindPESection
Address: 0x40248F, Instruction: add     esp, 8
Address: 0x402492, Instruction: mov     ebx, eax
Address: 0x402494, Instruction: mov     eax, ebx
Address: 0x402496, Instruction: pop     ebx
Address: 0x402497, Instruction: retn
Address: 0x4024A0, Instruction: push    ebx
Address: 0x4024A1, Instruction: xor     ebx, ebx
Address: 0x4024A3, Instruction: cmp     word ptr ds:400000h, 5A4Dh
Address: 0x4024AC, Instruction: jz      short loc_4024B2
Address: 0x4024AE, Instruction: mov     eax, ebx
Address: 0x4024B0, Instruction: pop     ebx
Address: 0x4024B1, Instruction: retn
Address: 0x4024B2, Instruction: mov     eax, 400000h; pImageBase
Address: 0x4024B7, Instruction: call    __ValidateImageBase_part_0
Address: 0x4024BC, Instruction: test    eax, eax
Address: 0x4024BE, Instruction: jz      short loc_4024AE
Address: 0x4024C0, Instruction: mov     eax, ds:40003Ch
Address: 0x4024C5, Instruction: movzx   ebx, word ptr [eax+400006h]
Address: 0x4024CC, Instruction: mov     eax, ebx
Address: 0x4024CE, Instruction: pop     ebx
Address: 0x4024CF, Instruction: retn
Address: 0x4024D0, Instruction: push    esi
Address: 0x4024D1, Instruction: xor     esi, esi
Address: 0x4024D3, Instruction: cmp     word ptr ds:400000h, 5A4Dh
Address: 0x4024DC, Instruction: push    ebx
Address: 0x4024DD, Instruction: mov     ebx, [esp+8+eNo]
Address: 0x4024E1, Instruction: jz      short loc_4024E8
Address: 0x4024E3, Instruction: mov     eax, esi
Address: 0x4024E5, Instruction: pop     ebx
Address: 0x4024E6, Instruction: pop     esi
Address: 0x4024E7, Instruction: retn
Address: 0x4024E8, Instruction: mov     eax, 400000h; pImageBase
Address: 0x4024ED, Instruction: call    __ValidateImageBase_part_0
Address: 0x4024F2, Instruction: test    eax, eax
Address: 0x4024F4, Instruction: jz      short loc_4024E3
Address: 0x4024F6, Instruction: mov     eax, ds:40003Ch
Address: 0x4024FB, Instruction: lea     ecx, [eax+400000h]
Address: 0x402501, Instruction: movzx   eax, word ptr [eax+400014h]
Address: 0x402508, Instruction: lea     pSection, [pNTHeader+eax+18h]
Address: 0x40250C, Instruction: movzx   pNTHeader, word ptr [pNTHeader+6]
Address: 0x402510, Instruction: test    ecx, ecx
Address: 0x402512, Instruction: jz      short loc_4024E3
Address: 0x402514, Instruction: xor     eax, eax
Address: 0x402516, Instruction: test    byte ptr [pSection+27h], 20h
Address: 0x40251A, Instruction: jz      short loc_402523
Address: 0x40251C, Instruction: test    eNo_0, eNo_0
Address: 0x40251E, Instruction: jz      short loc_402534
Address: 0x402520, Instruction: sub     eNo_0, 1
Address: 0x402523, Instruction: add     iSection, 1
Address: 0x402526, Instruction: add     pSection, 28h ; '('
Address: 0x402529, Instruction: cmp     iSection, ecx
Address: 0x40252B, Instruction: jb      short loc_402516
Address: 0x40252D, Instruction: xor     esi, esi
Address: 0x40252F, Instruction: mov     iSection, esi
Address: 0x402531, Instruction: pop     eNo_0
Address: 0x402532, Instruction: pop     esi
Address: 0x402533, Instruction: retn
Address: 0x402534, Instruction: mov     esi, pSection
Address: 0x402536, Instruction: mov     iSection, esi
Address: 0x402538, Instruction: pop     eNo_0
Address: 0x402539, Instruction: pop     esi
Address: 0x40253A, Instruction: retn
Address: 0x402540, Instruction: cmp     word ptr ds:400000h, 5A4Dh
Address: 0x402549, Instruction: jz      short loc_402550
Address: 0x40254B, Instruction: xor     eax, eax
Address: 0x40254D, Instruction: retn
Address: 0x40254E, Instruction: align 10h
Address: 0x402550, Instruction: mov     eax, 400000h; pImageBase
Address: 0x402555, Instruction: call    __ValidateImageBase_part_0
Address: 0x40255A, Instruction: test    eax, eax
Address: 0x40255C, Instruction: jz      short loc_40254B
Address: 0x40255E, Instruction: mov     eax, 400000h
Address: 0x402563, Instruction: retn
Address: 0x402570, Instruction: xor     eax, eax
Address: 0x402572, Instruction: cmp     word ptr ds:400000h, 5A4Dh
Address: 0x40257B, Instruction: jz      short loc_402580
Address: 0x40257D, Instruction: retn
Address: 0x40257E, Instruction: align 10h
Address: 0x402580, Instruction: sub     esp, 8
Address: 0x402583, Instruction: mov     eax, 400000h; pImageBase
Address: 0x402588, Instruction: call    __ValidateImageBase_part_0
Address: 0x40258D, Instruction: test    eax, eax
Address: 0x40258F, Instruction: jz      short loc_4025B6
Address: 0x402591, Instruction: mov     eax, [esp+8+pTarget]
Address: 0x402595, Instruction: mov     [esp+8+pImageBase], 400000h; pImageBase
Address: 0x40259C, Instruction: sub     eax, 400000h
Address: 0x4025A1, Instruction: mov     [esp+8+rva], rvaTarget; rva
Address: 0x4025A5, Instruction: call    __FindPESection
Address: 0x4025AA, Instruction: test    pSection, pSection
Address: 0x4025AC, Instruction: jz      short loc_4025C0
Address: 0x4025AE, Instruction: mov     pSection, [pSection+24h]
Address: 0x4025B1, Instruction: not     eax
Address: 0x4025B3, Instruction: shr     eax, 1Fh
Address: 0x4025B6, Instruction: add     esp, 8
Address: 0x4025B9, Instruction: retn
Address: 0x4025BA, Instruction: align 10h
Address: 0x4025C0, Instruction: xor     pSection, pSection
Address: 0x4025C2, Instruction: jmp     short loc_4025B6
Address: 0x4025D0, Instruction: push    edi
Address: 0x4025D1, Instruction: xor     edi, edi
Address: 0x4025D3, Instruction: push    esi
Address: 0x4025D4, Instruction: push    ebx
Address: 0x4025D5, Instruction: sub     esp, 8
Address: 0x4025D8, Instruction: cmp     word ptr ds:400000h, 5A4Dh
Address: 0x4025E1, Instruction: mov     ebx, [esp+14h+i]
Address: 0x4025E5, Instruction: jz      short loc_4025F0
Address: 0x4025E7, Instruction: add     esp, 8
Address: 0x4025EA, Instruction: mov     eax, edi
Address: 0x4025EC, Instruction: pop     ebx
Address: 0x4025ED, Instruction: pop     esi
Address: 0x4025EE, Instruction: pop     edi
Address: 0x4025EF, Instruction: retn
Address: 0x4025F0, Instruction: mov     eax, 400000h; pImageBase
Address: 0x4025F5, Instruction: call    __ValidateImageBase_part_0
Address: 0x4025FA, Instruction: test    eax, eax
Address: 0x4025FC, Instruction: jz      short loc_4025E7
Address: 0x4025FE, Instruction: mov     eax, ds:40003Ch
Address: 0x402603, Instruction: mov     esi, [eax+400080h]
Address: 0x402609, Instruction: test    importsStartRVA, importsStartRVA
Address: 0x40260B, Instruction: jz      short loc_4025E7
Address: 0x40260D, Instruction: mov     [esp+14h+rva], importsStartRVA; rva
Address: 0x402611, Instruction: mov     [esp+14h+pImageBase], 400000h; pImageBase
Address: 0x402618, Instruction: call    __FindPESection
Address: 0x40261D, Instruction: test    pSection, pSection
Address: 0x40261F, Instruction: jz      short loc_4025E7
Address: 0x402621, Instruction: add     importsStartRVA, 400000h
Address: 0x402627, Instruction: mov     edx, importDesc
Address: 0x402629, Instruction: jnz     short loc_402636
Address: 0x40262B, Instruction: jmp     short loc_4025E7
Address: 0x40262D, Instruction: align 10h
Address: 0x402630, Instruction: sub     i_0, 1
Address: 0x402633, Instruction: add     importDesc, 14h
Address: 0x402636, Instruction: mov     ecx, [importDesc+4]
Address: 0x402639, Instruction: test    ecx, ecx
Address: 0x40263B, Instruction: jnz     short loc_402644
Address: 0x40263D, Instruction: mov     eax, [importDesc+0Ch]
Address: 0x402640, Instruction: test    eax, eax
Address: 0x402642, Instruction: jz      short loc_402660
Address: 0x402644, Instruction: test    i_0, i_0
Address: 0x402646, Instruction: jg      short loc_402630
Address: 0x402648, Instruction: mov     edi, [importDesc+0Ch]
Address: 0x40264B, Instruction: add     esp, 8
Address: 0x40264E, Instruction: pop     i_0
Address: 0x40264F, Instruction: pop     esi
Address: 0x402650, Instruction: add     edi, 400000h
Address: 0x402656, Instruction: mov     eax, edi
Address: 0x402658, Instruction: pop     edi
Address: 0x402659, Instruction: retn
Address: 0x40265A, Instruction: align 10h
Address: 0x402660, Instruction: add     esp, 8
Address: 0x402663, Instruction: xor     edi, edi
Address: 0x402665, Instruction: mov     eax, edi
Address: 0x402667, Instruction: pop     i_0
Address: 0x402668, Instruction: pop     esi
Address: 0x402669, Instruction: pop     edi
Address: 0x40266A, Instruction: retn
Address: 0x402670, Instruction: push    ecx
Address: 0x402671, Instruction: push    eax
Address: 0x402672, Instruction: cmp     eax, 1000h
Address: 0x402677, Instruction: lea     ecx, [esp+8+arg_0]
Address: 0x40267B, Instruction: jb      short loc_402692
Address: 0x40267D, Instruction: sub     ecx, 1000h
Address: 0x402683, Instruction: or      dword ptr [ecx], 0
Address: 0x402686, Instruction: sub     eax, 1000h
Address: 0x40268B, Instruction: cmp     eax, 1000h
Address: 0x402690, Instruction: ja      short loc_40267D
Address: 0x402692, Instruction: sub     ecx, eax
Address: 0x402694, Instruction: or      dword ptr [ecx], 0
Address: 0x402697, Instruction: pop     eax
Address: 0x402698, Instruction: pop     ecx
Address: 0x402699, Instruction: retn
Address: 0x40269C, Instruction: jmp     ds:__imp____set_app_type
Address: 0x4026A4, Instruction: jmp     ds:__imp____getmainargs
Address: 0x4026B0, Instruction: mov     eax, ds:_handler
Address: 0x4026B5, Instruction: retn
Address: 0x4026C0, Instruction: push    ebp
Address: 0x4026C1, Instruction: mov     ebp, esp
Address: 0x4026C3, Instruction: sub     esp, 18h
Address: 0x4026C6, Instruction: mov     eax, [ebp+new_handler]
Address: 0x4026C9, Instruction: mov     dword ptr [esp], offset _handler; Target
Address: 0x4026D0, Instruction: mov     [esp+4], eax; Value
Address: 0x4026D4, Instruction: call    ds:__imp__InterlockedExchange@8
Address: 0x4026DA, Instruction: sub     esp, 8
Address: 0x4026DD, Instruction: leave
Address: 0x4026DE, Instruction: retn
Address: 0x4026E0, Instruction: jmp     ds:__imp__malloc
Address: 0x4026E8, Instruction: jmp     ds:__imp__strlen
Address: 0x4026F0, Instruction: jmp     ds:__imp__memcpy
Address: 0x4026F8, Instruction: jmp     ds:__imp___cexit
Address: 0x402700, Instruction: jmp     ds:__imp___amsg_exit
Address: 0x402708, Instruction: jmp     ds:__imp___initterm
Address: 0x402710, Instruction: jmp     ds:__imp__exit
Address: 0x402718, Instruction: jmp     ds:__imp___lock
Address: 0x402720, Instruction: jmp     ds:__imp____dllonexit
Address: 0x402728, Instruction: jmp     ds:__imp___unlock
Address: 0x402730, Instruction: jmp     ds:__imp__signal
Address: 0x402738, Instruction: jmp     ds:__imp____setusermatherr
Address: 0x402740, Instruction: jmp     ds:__imp__fprintf
Address: 0x402748, Instruction: jmp     ds:__imp__fwrite
Address: 0x402750, Instruction: jmp     ds:__imp__vfprintf
Address: 0x402758, Instruction: jmp     ds:__imp__abort
Address: 0x402760, Instruction: jmp     ds:__imp__calloc
Address: 0x402768, Instruction: jmp     ds:__imp__free
Address: 0x402770, Instruction: jmp     ds:__imp__strncmp
Address: 0x402780, Instruction: lea     ecx, [esp+4]
Address: 0x402784, Instruction: and     esp, 0FFFFFFF0h
Address: 0x402787, Instruction: push    dword ptr [ecx-4]
Address: 0x40278A, Instruction: push    ebp
Address: 0x40278B, Instruction: mov     ebp, esp
Address: 0x40278D, Instruction: push    ecx
Address: 0x40278E, Instruction: sub     esp, 14h
Address: 0x402791, Instruction: call    ___main
Address: 0x402796, Instruction: mov     eax, ___mingw_winmain_nShowCmd
Address: 0x40279B, Instruction: mov     dword ptr [esp+4], 0; hPreInst
Address: 0x4027A3, Instruction: mov     [esp+0Ch], eax; nCmdShow
Address: 0x4027A7, Instruction: mov     eax, ds:___mingw_winmain_lpCmdLine
Address: 0x4027AC, Instruction: mov     [esp+8], eax; lpszCmdLine
Address: 0x4027B0, Instruction: mov     eax, ds:___mingw_winmain_hInstance
Address: 0x4027B5, Instruction: mov     [esp], eax; hInst
Address: 0x4027B8, Instruction: call    _WinMain@16
Address: 0x4027BD, Instruction: mov     ecx, [ebp+var_4]
Address: 0x4027C0, Instruction: sub     esp, 10h
Address: 0x4027C3, Instruction: leave
Address: 0x4027C4, Instruction: lea     esp, [ecx-4]
Address: 0x4027C7, Instruction: retn
